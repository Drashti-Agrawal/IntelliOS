2025-08-21 00:32:28,739 [INFO] root:64 - Logging initialized at COMPREHENSIVE level
2025-08-21 00:32:28,740 [DEBUG] root:66 - Debug logging is enabled
2025-08-21 00:32:28,740 [INFO] __main__:102 - ================================================================================
2025-08-21 00:32:28,740 [INFO] __main__:103 - IntelliOS Log Processing System
2025-08-21 00:32:28,741 [INFO] __main__:104 - ================================================================================
2025-08-21 00:32:28,741 [INFO] __main__:105 - Logging level: COMPREHENSIVE
2025-08-21 00:32:28,741 [INFO] __main__:52 - Starting log processing for channel 'System' since 2025-08-20 18:02:28.741653+00:00
2025-08-21 00:32:28,742 [INFO] log_fetcher:14 - Opening event log channel: 'System'
2025-08-21 00:32:28,752 [DEBUG] log_fetcher:32 - Read a chunk of 11 events.
2025-08-21 00:32:28,753 [DEBUG] log_fetcher:48 - Yielding event from 'Service Control Manager' at 2025-08-21 00:28:13+00:00. Message: Background Intelligent Transfer Service auto start demand start BITS...
2025-08-21 00:32:28,753 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Service Control Manager'
2025-08-21 00:32:28,754 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?:The )?(?P<service_name>[^%\s]+)(?:.*?service entered the )(?P<state>\w+)(?:.*)|\s*(?P<service_name_alt>[^%\s]+)(?:\s+)(?P<action>\w+\s+\w+)(?:\s+)(?P<details>.*)
2025-08-21 00:32:28,754 [INFO] regex_parsers:199 - Successfully parsed log from 'Service Control Manager' with regex.
2025-08-21 00:32:28,754 [DEBUG] regex_parsers:22 - Regex handler 'handle_service_control' matched groups: {'service_name': None, 'state': None, 'service_name_alt': 'Background', 'action': 'Intelligent Transfer', 'details': 'Service auto start demand start BITS'}
2025-08-21 00:32:28,755 [DEBUG] log_fetcher:48 - Yielding event from 'Service Control Manager' at 2025-08-21 00:25:31+00:00. Message: Background Intelligent Transfer Service demand start auto start BITS...
2025-08-21 00:32:28,755 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Service Control Manager'
2025-08-21 00:32:28,755 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?:The )?(?P<service_name>[^%\s]+)(?:.*?service entered the )(?P<state>\w+)(?:.*)|\s*(?P<service_name_alt>[^%\s]+)(?:\s+)(?P<action>\w+\s+\w+)(?:\s+)(?P<details>.*)
2025-08-21 00:32:28,755 [INFO] regex_parsers:199 - Successfully parsed log from 'Service Control Manager' with regex.
2025-08-21 00:32:28,756 [DEBUG] regex_parsers:22 - Regex handler 'handle_service_control' matched groups: {'service_name': None, 'state': None, 'service_name_alt': 'Background', 'action': 'Intelligent Transfer', 'details': 'Service demand start auto start BITS'}
2025-08-21 00:32:28,756 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Kernel-Power' at 2025-08-20 23:46:46+00:00. Message: 21 32 158 1 259961883 34439 34439 34439 34439 160 0 true 32...
2025-08-21 00:32:28,756 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Kernel-Power'
2025-08-21 00:32:28,757 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?:The system is entering sleep\.|The system is exiting sleep\.|(?:Sleep|Hibernate) Time: (?P<sleep_time>.*))(?P<sleep_details>.*)?|(?:Shutdown reason: (?P<shutdown_reason>.*))(?P<shutdown_details>.*)?|(?P<message>.*)
2025-08-21 00:32:28,757 [INFO] regex_parsers:199 - Successfully parsed log from 'Microsoft-Windows-Kernel-Power' with regex.
2025-08-21 00:32:28,758 [DEBUG] regex_parsers:45 - Regex handler 'handle_kernel_power' matched groups: {'sleep_time': None, 'sleep_details': None, 'shutdown_reason': None, 'shutdown_details': None, 'message': '21 32 158 1 259961883 34439 34439 34439 34439 160 0 true 32'}
2025-08-21 00:32:28,758 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Kernel-Power' at 2025-08-20 23:46:46+00:00. Message: 0 259967187 0 0 0 259967187 0 83 true 32 32363743 0 true 0 274579 false true 0 7 0 true false 160 fa...
2025-08-21 00:32:28,758 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Kernel-Power'
2025-08-21 00:32:28,759 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?:The system is entering sleep\.|The system is exiting sleep\.|(?:Sleep|Hibernate) Time: (?P<sleep_time>.*))(?P<sleep_details>.*)?|(?:Shutdown reason: (?P<shutdown_reason>.*))(?P<shutdown_details>.*)?|(?P<message>.*)
2025-08-21 00:32:28,759 [INFO] regex_parsers:199 - Successfully parsed log from 'Microsoft-Windows-Kernel-Power' with regex.
2025-08-21 00:32:28,759 [DEBUG] regex_parsers:45 - Regex handler 'handle_kernel_power' matched groups: {'sleep_time': None, 'sleep_details': None, 'shutdown_reason': None, 'shutdown_details': None, 'message': '0 259967187 0 0 0 259967187 0 83 true 32 32363743 0 true 0 274579 false true 0 7 0 true false 160 false 34439 34439 158 21 0 259967187 0 0 0 0 272169 false 34439 34439 259961883 0 0 0 34439 34439 0 0 4 0'}
2025-08-21 00:32:28,759 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-WindowsUpdateClient' at 2025-08-20 23:44:08+00:00. Message: Security Intelligence Update for Microsoft Defender Antivirus - KB2267602 (Version 1.435.286.0) - Cu...
2025-08-21 00:32:28,760 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-WindowsUpdateClient'
2025-08-21 00:32:28,760 [INFO] regex_parsers:201 - No regex match found for provider 'Microsoft-Windows-WindowsUpdateClient'.
2025-08-21 00:32:28,760 [INFO] __main__:63 - Regex failed for provider 'Microsoft-Windows-WindowsUpdateClient'. Trying LLM...
2025-08-21 00:32:28,760 [INFO] llm_layer:28 - Attempting LLM parsing for provider: 'Microsoft-Windows-WindowsUpdateClient'
2025-08-21 00:32:28,766 [DEBUG] instructor:1276 - Instructor Request: mode.value='tool_call', response_model=<class 'config.ActivityLog'>, new_kwargs={'model': 'llama3-70b-8192', 'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-WindowsUpdateClient\n\nLog entry: Security Intelligence Update for Microsoft Defender Antivirus - KB2267602 (Version 1.435.286.0) - Current Channel (Broad) {d1b0bb57-4a31-4742-b435-ec19cc36e9b0} 200 {9482f4b4-e343-43b6-b170-9a65bc822c77}\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}], 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}}
2025-08-21 00:32:28,768 [DEBUG] instructor:61 - max_retries: 1, timeout: None
2025-08-21 00:32:28,769 [DEBUG] instructor:183 - Retrying, attempt: 1
2025-08-21 00:32:28,771 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-9e0fdb8c-e916-4f06-a539-745251102b05', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-WindowsUpdateClient\n\nLog entry: Security Intelligence Update for Microsoft Defender Antivirus - KB2267602 (Version 1.435.286.0) - Current Channel (Broad) {d1b0bb57-4a31-4742-b435-ec19cc36e9b0} 200 {9482f4b4-e343-43b6-b170-9a65bc822c77}\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:32:28,904 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:32:28,904 [DEBUG] httpcore.connection:47 - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-21 00:32:29,037 [DEBUG] httpcore.connection:47 - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF23F4440>
2025-08-21 00:32:29,038 [DEBUG] httpcore.connection:47 - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000027DF06B8690> server_hostname='api.groq.com' timeout=5.0
2025-08-21 00:32:29,144 [DEBUG] httpcore.connection:47 - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF23991D0>
2025-08-21 00:32:29,144 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:32:29,145 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:32:29,145 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:32:29,146 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:32:29,146 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:32:29,829 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 20 Aug 2025 19:02:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'5839'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'1.61s'), (b'x-request-id', b'req_01k34drzbde9v8d85cfefp34a3'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=ql0TfrmzzzriksOJwXe.aWLQFHI0TwVHogBx6f1_dno-1755716550-1.0.1.1-TMhm8IfCFoQB9HOIiVKhpbt2OkmvTpM8iFMgCO489azcQ2wnOMOenDlNjVPGNbOicu2gvJKTsm2JcMrvhGbIz2V67MfMTXpvUmapQHLZhRA; path=/; expires=Wed, 20-Aug-25 19:32:30 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'972425353b92ff9e-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:32:29,832 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-21 00:32:29,833 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:32:29,834 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:32:29,835 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:32:29,835 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:32:29,835 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 20 Aug 2025 19:02:30 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'content-encoding': 'gzip', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '5839', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '1.61s', 'x-request-id': 'req_01k34drzbde9v8d85cfefp34a3', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=ql0TfrmzzzriksOJwXe.aWLQFHI0TwVHogBx6f1_dno-1755716550-1.0.1.1-TMhm8IfCFoQB9HOIiVKhpbt2OkmvTpM8iFMgCO489azcQ2wnOMOenDlNjVPGNbOicu2gvJKTsm2JcMrvhGbIz2V67MfMTXpvUmapQHLZhRA; path=/; expires=Wed, 20-Aug-25 19:32:30 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '972425353b92ff9e-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:32:29,848 [DEBUG] instructor:455 - No compatible response.usage found, token usage not updated.
2025-08-21 00:32:29,849 [DEBUG] instructor:155 - Instructor Raw Response: ChatCompletion(id='chatcmpl-2fe53cb8-c426-43ee-98ba-c9f190803187', choices=[Choice(finish_reason='tool_calls', index=0, logprobs=None, message=ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='2vdx5ktz5', function=Function(arguments='{"app_name":"Microsoft Defender Antivirus","event_type":"system_event","summary":"Security Intelligence Update for Microsoft Defender Antivirus - KB2267602 (Version 1.435.286.0) - Current Channel (Broad)"}', name='ActivityLog'), type='function')]))], created=1755716550, model='llama3-70b-8192', object='chat.completion', system_fingerprint='fp_bf16903a67', usage=CompletionUsage(completion_tokens=114, prompt_tokens=1436, total_tokens=1550, completion_time=0.218900721, prompt_time=0.112644386, queue_time=0.263299184, total_time=0.331545107), usage_breakdown=None, x_groq={'id': 'req_01k34drzbde9v8d85cfefp34a3'}, service_tier='on_demand')
2025-08-21 00:32:29,850 [INFO] llm_layer:37 - LLM parsing successful for provider: 'Microsoft-Windows-WindowsUpdateClient'
2025-08-21 00:32:29,851 [INFO] __main__:68 - Successfully parsed log from 'Microsoft-Windows-WindowsUpdateClient' with LLM.
2025-08-21 00:32:29,851 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-WindowsUpdateClient' at 2025-08-20 23:43:55+00:00. Message: Security Intelligence Update for Microsoft Defender Antivirus - KB2267602 (Version 1.435.286.0) - Cu...
2025-08-21 00:32:29,851 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-WindowsUpdateClient'
2025-08-21 00:32:29,851 [INFO] regex_parsers:201 - No regex match found for provider 'Microsoft-Windows-WindowsUpdateClient'.
2025-08-21 00:32:29,852 [INFO] __main__:63 - Regex failed for provider 'Microsoft-Windows-WindowsUpdateClient'. Trying LLM...
2025-08-21 00:32:29,852 [INFO] llm_layer:28 - Attempting LLM parsing for provider: 'Microsoft-Windows-WindowsUpdateClient'
2025-08-21 00:32:29,854 [DEBUG] instructor:1276 - Instructor Request: mode.value='tool_call', response_model=<class 'config.ActivityLog'>, new_kwargs={'model': 'llama3-70b-8192', 'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-WindowsUpdateClient\n\nLog entry: Security Intelligence Update for Microsoft Defender Antivirus - KB2267602 (Version 1.435.286.0) - Current Channel (Broad) {d1b0bb57-4a31-4742-b435-ec19cc36e9b0} 200\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}], 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}}
2025-08-21 00:32:29,855 [DEBUG] instructor:61 - max_retries: 1, timeout: None
2025-08-21 00:32:29,856 [DEBUG] instructor:183 - Retrying, attempt: 1
2025-08-21 00:32:29,857 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-420ab221-fbe9-4c63-89a4-afa4aa29cdcd', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-WindowsUpdateClient\n\nLog entry: Security Intelligence Update for Microsoft Defender Antivirus - KB2267602 (Version 1.435.286.0) - Current Channel (Broad) {d1b0bb57-4a31-4742-b435-ec19cc36e9b0} 200\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:32:29,858 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:32:29,858 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:32:29,859 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:32:29,859 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:32:29,860 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:32:29,860 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:32:31,211 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 20 Aug 2025 19:02:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'4309'), (b'x-ratelimit-reset-requests', b'11.282999999s'), (b'x-ratelimit-reset-tokens', b'16.901s'), (b'x-request-id', b'req_01k34ds01te9vvamxmn0yr0ame'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97242539a846ff9e-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:32:31,214 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-21 00:32:31,215 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:32:31,215 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:32:31,216 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:32:31,217 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:32:31,218 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 20 Aug 2025 19:02:31 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'content-encoding': 'gzip', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14398', 'x-ratelimit-remaining-tokens': '4309', 'x-ratelimit-reset-requests': '11.282999999s', 'x-ratelimit-reset-tokens': '16.901s', 'x-request-id': 'req_01k34ds01te9vvamxmn0yr0ame', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '97242539a846ff9e-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:32:31,221 [DEBUG] instructor:455 - No compatible response.usage found, token usage not updated.
2025-08-21 00:32:31,222 [DEBUG] instructor:155 - Instructor Raw Response: ChatCompletion(id='chatcmpl-4069b85b-bb14-44f0-9806-00723865dce5', choices=[Choice(finish_reason='tool_calls', index=0, logprobs=None, message=ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='pa6n5pgma', function=Function(arguments='{"app_name":"Microsoft Defender Antivirus","event_subtype":"update","event_type":"file_interaction","summary":"Security Intelligence Update"}', name='ActivityLog'), type='function')]))], created=1755716551, model='llama3-70b-8192', object='chat.completion', system_fingerprint='fp_bf16903a67', usage=CompletionUsage(completion_tokens=70, prompt_tokens=1413, total_tokens=1483, completion_time=0.193135408, prompt_time=0.109382926, queue_time=0.963764146, total_time=0.302518334), usage_breakdown=None, x_groq={'id': 'req_01k34ds01te9vvamxmn0yr0ame'}, service_tier='on_demand')
2025-08-21 00:32:31,224 [INFO] llm_layer:37 - LLM parsing successful for provider: 'Microsoft-Windows-WindowsUpdateClient'
2025-08-21 00:32:31,224 [INFO] __main__:68 - Successfully parsed log from 'Microsoft-Windows-WindowsUpdateClient' with LLM.
2025-08-21 00:32:31,225 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-WindowsUpdateClient' at 2025-08-20 23:43:13+00:00. Message: Security Intelligence Update for Microsoft Defender Antivirus - KB2267602 (Version 1.435.286.0) - Cu...
2025-08-21 00:32:31,225 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-WindowsUpdateClient'
2025-08-21 00:32:31,226 [INFO] regex_parsers:201 - No regex match found for provider 'Microsoft-Windows-WindowsUpdateClient'.
2025-08-21 00:32:31,226 [INFO] __main__:63 - Regex failed for provider 'Microsoft-Windows-WindowsUpdateClient'. Trying LLM...
2025-08-21 00:32:31,226 [INFO] llm_layer:28 - Attempting LLM parsing for provider: 'Microsoft-Windows-WindowsUpdateClient'
2025-08-21 00:32:31,229 [DEBUG] instructor:1276 - Instructor Request: mode.value='tool_call', response_model=<class 'config.ActivityLog'>, new_kwargs={'model': 'llama3-70b-8192', 'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-WindowsUpdateClient\n\nLog entry: Security Intelligence Update for Microsoft Defender Antivirus - KB2267602 (Version 1.435.286.0) - Current Channel (Broad) {d1b0bb57-4a31-4742-b435-ec19cc36e9b0} 200\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}], 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}}
2025-08-21 00:32:31,230 [DEBUG] instructor:61 - max_retries: 1, timeout: None
2025-08-21 00:32:31,232 [DEBUG] instructor:183 - Retrying, attempt: 1
2025-08-21 00:32:31,233 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-08cd9736-9b06-490a-942d-7ef3891bf91d', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-WindowsUpdateClient\n\nLog entry: Security Intelligence Update for Microsoft Defender Antivirus - KB2267602 (Version 1.435.286.0) - Current Channel (Broad) {d1b0bb57-4a31-4742-b435-ec19cc36e9b0} 200\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:32:31,234 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:32:31,234 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:32:31,235 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:32:31,235 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:32:31,235 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:32:31,236 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:32:32,257 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 20 Aug 2025 19:02:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14397'), (b'x-ratelimit-remaining-tokens', b'2964'), (b'x-ratelimit-reset-requests', b'16.612s'), (b'x-ratelimit-reset-tokens', b'30.351s'), (b'x-request-id', b'req_01k34ds1d6f6etgwkq5yrwamhw'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'972425426a91ff9e-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:32:32,260 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-21 00:32:32,261 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:32:32,262 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:32:32,263 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:32:32,266 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:32:32,266 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 20 Aug 2025 19:02:33 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'content-encoding': 'gzip', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14397', 'x-ratelimit-remaining-tokens': '2964', 'x-ratelimit-reset-requests': '16.612s', 'x-ratelimit-reset-tokens': '30.351s', 'x-request-id': 'req_01k34ds1d6f6etgwkq5yrwamhw', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '972425426a91ff9e-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:32:32,270 [DEBUG] instructor:455 - No compatible response.usage found, token usage not updated.
2025-08-21 00:32:32,271 [DEBUG] instructor:155 - Instructor Raw Response: ChatCompletion(id='chatcmpl-230ffe23-7649-4da0-a032-0b7d623807aa', choices=[Choice(finish_reason='tool_calls', index=0, logprobs=None, message=ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='1g6n03n0y', function=Function(arguments='{"app_name":"Microsoft Defender Antivirus","event_subtype":"update","event_type":"file_interaction","summary":"Security Intelligence Update"}', name='ActivityLog'), type='function')]))], created=1755716553, model='llama3-70b-8192', object='chat.completion', system_fingerprint='fp_bf16903a67', usage=CompletionUsage(completion_tokens=70, prompt_tokens=1413, total_tokens=1483, completion_time=0.187856056, prompt_time=0.110277181, queue_time=0.626232164, total_time=0.298133237), usage_breakdown=None, x_groq={'id': 'req_01k34ds1d6f6etgwkq5yrwamhw'}, service_tier='on_demand')
2025-08-21 00:32:32,272 [INFO] llm_layer:37 - LLM parsing successful for provider: 'Microsoft-Windows-WindowsUpdateClient'
2025-08-21 00:32:32,273 [INFO] __main__:68 - Successfully parsed log from 'Microsoft-Windows-WindowsUpdateClient' with LLM.
2025-08-21 00:32:32,273 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Kernel-Power' at 2025-08-20 23:42:26+00:00. Message: 12 true false 158 34439 34439 158 21...
2025-08-21 00:32:32,273 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Kernel-Power'
2025-08-21 00:32:32,273 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?:The system is entering sleep\.|The system is exiting sleep\.|(?:Sleep|Hibernate) Time: (?P<sleep_time>.*))(?P<sleep_details>.*)?|(?:Shutdown reason: (?P<shutdown_reason>.*))(?P<shutdown_details>.*)?|(?P<message>.*)
2025-08-21 00:32:32,273 [INFO] regex_parsers:199 - Successfully parsed log from 'Microsoft-Windows-Kernel-Power' with regex.
2025-08-21 00:32:32,274 [DEBUG] regex_parsers:45 - Regex handler 'handle_kernel_power' matched groups: {'sleep_time': None, 'sleep_details': None, 'shutdown_reason': None, 'shutdown_details': None, 'message': '12 true false 158 34439 34439 158 21'}
2025-08-21 00:32:32,274 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Kernel-Power' at 2025-08-20 23:42:26+00:00. Message: 21 12 157 0 6241848815 28712 34337 34439 34439 158 1 true 12...
2025-08-21 00:32:32,274 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Kernel-Power'
2025-08-21 00:32:32,275 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?:The system is entering sleep\.|The system is exiting sleep\.|(?:Sleep|Hibernate) Time: (?P<sleep_time>.*))(?P<sleep_details>.*)?|(?:Shutdown reason: (?P<shutdown_reason>.*))(?P<shutdown_details>.*)?|(?P<message>.*)
2025-08-21 00:32:32,275 [INFO] regex_parsers:199 - Successfully parsed log from 'Microsoft-Windows-Kernel-Power' with regex.
2025-08-21 00:32:32,276 [DEBUG] regex_parsers:45 - Regex handler 'handle_kernel_power' matched groups: {'sleep_time': None, 'sleep_details': None, 'shutdown_reason': None, 'shutdown_details': None, 'message': '21 12 157 0 6241848815 28712 34337 34439 34439 158 1 true 12'}
2025-08-21 00:32:32,277 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Time-Service' at 2025-08-20 23:04:31+00:00. Message: VMICTimeProvider...
2025-08-21 00:32:32,277 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Time-Service'
2025-08-21 00:32:32,277 [INFO] regex_parsers:201 - No regex match found for provider 'Microsoft-Windows-Time-Service'.
2025-08-21 00:32:32,277 [INFO] __main__:63 - Regex failed for provider 'Microsoft-Windows-Time-Service'. Trying LLM...
2025-08-21 00:32:32,277 [INFO] llm_layer:28 - Attempting LLM parsing for provider: 'Microsoft-Windows-Time-Service'
2025-08-21 00:32:32,281 [DEBUG] instructor:1276 - Instructor Request: mode.value='tool_call', response_model=<class 'config.ActivityLog'>, new_kwargs={'model': 'llama3-70b-8192', 'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Time-Service\n\nLog entry: VMICTimeProvider\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}], 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}}
2025-08-21 00:32:32,282 [DEBUG] instructor:61 - max_retries: 1, timeout: None
2025-08-21 00:32:32,282 [DEBUG] instructor:183 - Retrying, attempt: 1
2025-08-21 00:32:32,283 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-197c982d-c585-49fe-8607-d62df1c494a2', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Time-Service\n\nLog entry: VMICTimeProvider\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:32:32,284 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:32:32,284 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:32:32,285 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:32:32,285 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:32:32,286 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:32:32,286 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:32:32,929 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 20 Aug 2025 19:02:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14396'), (b'x-ratelimit-remaining-tokens', b'1625'), (b'x-ratelimit-reset-requests', b'22.952s'), (b'x-ratelimit-reset-tokens', b'43.747s'), (b'x-request-id', b'req_01k34ds2dzex9apq9st6t65nn2'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97242548fa88ff9e-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:32:32,931 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-21 00:32:32,932 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:32:32,932 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:32:32,933 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:32:32,934 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:32:32,935 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 20 Aug 2025 19:02:33 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'content-encoding': 'gzip', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14396', 'x-ratelimit-remaining-tokens': '1625', 'x-ratelimit-reset-requests': '22.952s', 'x-ratelimit-reset-tokens': '43.747s', 'x-request-id': 'req_01k34ds2dzex9apq9st6t65nn2', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '97242548fa88ff9e-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:32:32,939 [DEBUG] instructor:455 - No compatible response.usage found, token usage not updated.
2025-08-21 00:32:32,940 [DEBUG] instructor:155 - Instructor Raw Response: ChatCompletion(id='chatcmpl-12a26042-df37-4d39-99bd-ee065e2bbdfb', choices=[Choice(finish_reason='tool_calls', index=0, logprobs=None, message=ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='x80x1cyhm', function=Function(arguments='{"event_type":"system_event","summary":"VMICTimeProvider"}', name='ActivityLog'), type='function')]))], created=1755716553, model='llama3-70b-8192', object='chat.completion', system_fingerprint='fp_bf16903a67', usage=CompletionUsage(completion_tokens=77, prompt_tokens=1359, total_tokens=1436, completion_time=0.178581397, prompt_time=0.105338893, queue_time=0.263574372, total_time=0.28392029), usage_breakdown=None, x_groq={'id': 'req_01k34ds2dzex9apq9st6t65nn2'}, service_tier='on_demand')
2025-08-21 00:32:32,942 [INFO] llm_layer:37 - LLM parsing successful for provider: 'Microsoft-Windows-Time-Service'
2025-08-21 00:32:32,943 [INFO] __main__:68 - Successfully parsed log from 'Microsoft-Windows-Time-Service' with LLM.
2025-08-21 00:32:32,943 [DEBUG] log_fetcher:48 - Yielding event from 'TPM' at 2025-08-20 22:50:58+00:00. Message: 0x1e 960 371 395...
2025-08-21 00:32:32,944 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'TPM'
2025-08-21 00:32:32,944 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?P<message>.*)
2025-08-21 00:32:32,944 [INFO] regex_parsers:199 - Successfully parsed log from 'TPM' with regex.
2025-08-21 00:32:32,945 [DEBUG] regex_parsers:73 - Regex handler 'handle_generic_event' matched groups: {'message': '0x1e 960 371 395'}
2025-08-21 00:32:32,946 [DEBUG] log_fetcher:32 - Read a chunk of 14 events.
2025-08-21 00:32:32,946 [DEBUG] log_fetcher:48 - Yielding event from 'TPM' at 2025-08-20 22:50:58+00:00. Message: 0x1e 960 371 395...
2025-08-21 00:32:32,946 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'TPM'
2025-08-21 00:32:32,946 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?P<message>.*)
2025-08-21 00:32:32,947 [INFO] regex_parsers:199 - Successfully parsed log from 'TPM' with regex.
2025-08-21 00:32:32,947 [DEBUG] regex_parsers:73 - Regex handler 'handle_generic_event' matched groups: {'message': '0x1e 960 371 395'}
2025-08-21 00:32:32,947 [DEBUG] log_fetcher:48 - Yielding event from 'TPM' at 2025-08-20 22:50:57+00:00. Message: 0x1e 960 371 395...
2025-08-21 00:32:32,948 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'TPM'
2025-08-21 00:32:32,948 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?P<message>.*)
2025-08-21 00:32:32,948 [INFO] regex_parsers:199 - Successfully parsed log from 'TPM' with regex.
2025-08-21 00:32:32,948 [DEBUG] regex_parsers:73 - Regex handler 'handle_generic_event' matched groups: {'message': '0x1e 960 371 395'}
2025-08-21 00:32:32,948 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-IsolatedUserMode' at 2025-08-20 22:50:56+00:00. Message: 0 0 0 NULL...
2025-08-21 00:32:32,948 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-IsolatedUserMode'
2025-08-21 00:32:32,949 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?P<message>.*)
2025-08-21 00:32:32,949 [INFO] regex_parsers:199 - Successfully parsed log from 'Microsoft-Windows-IsolatedUserMode' with regex.
2025-08-21 00:32:32,949 [DEBUG] regex_parsers:73 - Regex handler 'handle_generic_event' matched groups: {'message': '0 0 0 NULL'}
2025-08-21 00:32:32,950 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-IsolatedUserMode' at 2025-08-20 22:50:56+00:00. Message: 0 0 0...
2025-08-21 00:32:32,950 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-IsolatedUserMode'
2025-08-21 00:32:32,950 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?P<message>.*)
2025-08-21 00:32:32,951 [INFO] regex_parsers:199 - Successfully parsed log from 'Microsoft-Windows-IsolatedUserMode' with regex.
2025-08-21 00:32:32,951 [DEBUG] regex_parsers:73 - Regex handler 'handle_generic_event' matched groups: {'message': '0 0 0'}
2025-08-21 00:32:32,951 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Time-Service' at 2025-08-20 22:47:27+00:00. Message: VMICTimeProvider...
2025-08-21 00:32:32,951 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Time-Service'
2025-08-21 00:32:32,951 [INFO] regex_parsers:201 - No regex match found for provider 'Microsoft-Windows-Time-Service'.
2025-08-21 00:32:32,951 [INFO] __main__:63 - Regex failed for provider 'Microsoft-Windows-Time-Service'. Trying LLM...
2025-08-21 00:32:32,952 [INFO] llm_layer:28 - Attempting LLM parsing for provider: 'Microsoft-Windows-Time-Service'
2025-08-21 00:32:32,955 [DEBUG] instructor:1276 - Instructor Request: mode.value='tool_call', response_model=<class 'config.ActivityLog'>, new_kwargs={'model': 'llama3-70b-8192', 'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Time-Service\n\nLog entry: VMICTimeProvider\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}], 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}}
2025-08-21 00:32:32,956 [DEBUG] instructor:61 - max_retries: 1, timeout: None
2025-08-21 00:32:32,956 [DEBUG] instructor:183 - Retrying, attempt: 1
2025-08-21 00:32:32,957 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-812cbe6a-1e93-4ae6-9c5f-c8ddf8600b6b', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Time-Service\n\nLog entry: VMICTimeProvider\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:32:32,959 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:32:32,960 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:32:32,961 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:32:32,961 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:32:32,961 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:32:32,962 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:32:34,610 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 20 Aug 2025 19:02:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14395'), (b'x-ratelimit-remaining-tokens', b'256'), (b'x-ratelimit-reset-requests', b'29.33s'), (b'x-ratelimit-reset-tokens', b'57.438999999s'), (b'x-request-id', b'req_01k34ds32yexabs5721p1dpfkz'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9724254d2fb1ff9e-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:32:34,612 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-21 00:32:34,613 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:32:34,614 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:32:34,615 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:32:34,615 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:32:34,616 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 20 Aug 2025 19:02:35 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'content-encoding': 'gzip', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14395', 'x-ratelimit-remaining-tokens': '256', 'x-ratelimit-reset-requests': '29.33s', 'x-ratelimit-reset-tokens': '57.438999999s', 'x-request-id': 'req_01k34ds32yexabs5721p1dpfkz', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '9724254d2fb1ff9e-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:32:34,619 [DEBUG] instructor:455 - No compatible response.usage found, token usage not updated.
2025-08-21 00:32:34,620 [DEBUG] instructor:155 - Instructor Raw Response: ChatCompletion(id='chatcmpl-d89eaa44-b0a9-443a-bd13-a56d190a7e6f', choices=[Choice(finish_reason='tool_calls', index=0, logprobs=None, message=ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='ehd16r09m', function=Function(arguments='{"event_type":"system_event","summary":"VMICTimeProvider"}', name='ActivityLog'), type='function')]))], created=1755716555, model='llama3-70b-8192', object='chat.completion', system_fingerprint='fp_bf16903a67', usage=CompletionUsage(completion_tokens=77, prompt_tokens=1359, total_tokens=1436, completion_time=0.158827374, prompt_time=0.106611439, queue_time=1.289817895, total_time=0.265438813), usage_breakdown=None, x_groq={'id': 'req_01k34ds32yexabs5721p1dpfkz'}, service_tier='on_demand')
2025-08-21 00:32:34,623 [INFO] llm_layer:37 - LLM parsing successful for provider: 'Microsoft-Windows-Time-Service'
2025-08-21 00:32:34,624 [INFO] __main__:68 - Successfully parsed log from 'Microsoft-Windows-Time-Service' with LLM.
2025-08-21 00:32:34,624 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Time-Service' at 2025-08-20 22:30:23+00:00. Message: VMICTimeProvider...
2025-08-21 00:32:34,625 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Time-Service'
2025-08-21 00:32:34,626 [INFO] regex_parsers:201 - No regex match found for provider 'Microsoft-Windows-Time-Service'.
2025-08-21 00:32:34,626 [INFO] __main__:63 - Regex failed for provider 'Microsoft-Windows-Time-Service'. Trying LLM...
2025-08-21 00:32:34,627 [INFO] llm_layer:28 - Attempting LLM parsing for provider: 'Microsoft-Windows-Time-Service'
2025-08-21 00:32:34,629 [DEBUG] instructor:1276 - Instructor Request: mode.value='tool_call', response_model=<class 'config.ActivityLog'>, new_kwargs={'model': 'llama3-70b-8192', 'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Time-Service\n\nLog entry: VMICTimeProvider\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}], 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}}
2025-08-21 00:32:34,630 [DEBUG] instructor:61 - max_retries: 1, timeout: None
2025-08-21 00:32:34,630 [DEBUG] instructor:183 - Retrying, attempt: 1
2025-08-21 00:32:34,631 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-11c4bb24-f5d9-4797-82a7-3a8dfc1c101c', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Time-Service\n\nLog entry: VMICTimeProvider\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:32:34,633 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:32:34,634 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:32:34,634 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:32:34,635 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:32:34,635 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:32:34,636 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:32:34,737 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 20 Aug 2025 19:02:35 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'374'), (b'Connection', b'keep-alive'), (b'CF-RAY', b'97242557ad9fff9e-BOM'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'11'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14395'), (b'x-ratelimit-remaining-tokens', b'-899'), (b'x-ratelimit-reset-requests', b'28.315999999s'), (b'x-ratelimit-reset-tokens', b'1m8.992s'), (b'x-request-id', b'req_01k34ds4qkexbrck84v3x77tja'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:32:34,739 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-08-21 00:32:34,740 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:32:34,741 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:32:34,742 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:32:34,743 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:32:34,743 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Wed, 20 Aug 2025 19:02:35 GMT', 'content-type': 'application/json', 'content-length': '374', 'connection': 'keep-alive', 'cf-ray': '97242557ad9fff9e-BOM', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'retry-after': '11', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14395', 'x-ratelimit-remaining-tokens': '-899', 'x-ratelimit-reset-requests': '28.315999999s', 'x-ratelimit-reset-tokens': '1m8.992s', 'x-request-id': 'req_01k34ds4qkexbrck84v3x77tja', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:32:34,745 [DEBUG] groq._base_client:1026 - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\groq\_base_client.py", line 1024, in request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-08-21 00:32:34,772 [DEBUG] groq._base_client:772 - Retrying due to status code 429
2025-08-21 00:32:34,772 [DEBUG] groq._base_client:1065 - 2 retries left
2025-08-21 00:32:34,773 [INFO] groq._base_client:1068 - Retrying request to /openai/v1/chat/completions in 11.000000 seconds
2025-08-21 00:32:45,774 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-11c4bb24-f5d9-4797-82a7-3a8dfc1c101c', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Time-Service\n\nLog entry: VMICTimeProvider\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:32:45,777 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:32:45,777 [DEBUG] httpcore.connection:47 - close.started
2025-08-21 00:32:45,778 [DEBUG] httpcore.connection:47 - close.complete
2025-08-21 00:32:45,778 [DEBUG] httpcore.connection:47 - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-21 00:32:45,846 [DEBUG] httpcore.connection:47 - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF239BC50>
2025-08-21 00:32:45,847 [DEBUG] httpcore.connection:47 - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000027DF06B8690> server_hostname='api.groq.com' timeout=5.0
2025-08-21 00:32:45,920 [DEBUG] httpcore.connection:47 - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF22E0E90>
2025-08-21 00:32:45,921 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:32:45,921 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:32:45,921 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:32:45,922 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:32:45,922 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:32:47,434 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 20 Aug 2025 19:02:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14396'), (b'x-ratelimit-remaining-tokens', b'116'), (b'x-ratelimit-reset-requests', b'23.028999999s'), (b'x-ratelimit-reset-tokens', b'58.835s'), (b'x-request-id', b'req_01k34dsfraexk8wyse524m4xpj'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9724259e3e843c58-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:32:47,436 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-21 00:32:47,437 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:32:47,438 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:32:47,438 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:32:47,439 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:32:47,439 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 20 Aug 2025 19:02:48 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'content-encoding': 'gzip', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14396', 'x-ratelimit-remaining-tokens': '116', 'x-ratelimit-reset-requests': '23.028999999s', 'x-ratelimit-reset-tokens': '58.835s', 'x-request-id': 'req_01k34dsfraexk8wyse524m4xpj', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '9724259e3e843c58-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:32:47,442 [DEBUG] instructor:455 - No compatible response.usage found, token usage not updated.
2025-08-21 00:32:47,443 [DEBUG] instructor:155 - Instructor Raw Response: ChatCompletion(id='chatcmpl-45bba966-ac81-4f2f-863b-57c334f357b1', choices=[Choice(finish_reason='tool_calls', index=0, logprobs=None, message=ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='9jz68zhdq', function=Function(arguments='{"event_type":"system_event","summary":"VMICTimeProvider"}', name='ActivityLog'), type='function')]))], created=1755716568, model='llama3-70b-8192', object='chat.completion', system_fingerprint='fp_bf16903a67', usage=CompletionUsage(completion_tokens=77, prompt_tokens=1359, total_tokens=1436, completion_time=0.159599842, prompt_time=0.106455104, queue_time=1.123150535, total_time=0.266054946), usage_breakdown=None, x_groq={'id': 'req_01k34dsfraexk8wyse524m4xpj'}, service_tier='on_demand')
2025-08-21 00:32:47,447 [INFO] llm_layer:37 - LLM parsing successful for provider: 'Microsoft-Windows-Time-Service'
2025-08-21 00:32:47,447 [INFO] __main__:68 - Successfully parsed log from 'Microsoft-Windows-Time-Service' with LLM.
2025-08-21 00:32:47,448 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Kernel-Processor-Power' at 2025-08-20 22:26:42+00:00. Message: 0 11 213253 0 0 0...
2025-08-21 00:32:47,449 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Kernel-Processor-Power'
2025-08-21 00:32:47,449 [INFO] regex_parsers:201 - No regex match found for provider 'Microsoft-Windows-Kernel-Processor-Power'.
2025-08-21 00:32:47,449 [INFO] __main__:63 - Regex failed for provider 'Microsoft-Windows-Kernel-Processor-Power'. Trying LLM...
2025-08-21 00:32:47,450 [INFO] llm_layer:28 - Attempting LLM parsing for provider: 'Microsoft-Windows-Kernel-Processor-Power'
2025-08-21 00:32:47,453 [DEBUG] instructor:1276 - Instructor Request: mode.value='tool_call', response_model=<class 'config.ActivityLog'>, new_kwargs={'model': 'llama3-70b-8192', 'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Kernel-Processor-Power\n\nLog entry: 0 11 213253 0 0 0\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}], 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}}
2025-08-21 00:32:47,453 [DEBUG] instructor:61 - max_retries: 1, timeout: None
2025-08-21 00:32:47,454 [DEBUG] instructor:183 - Retrying, attempt: 1
2025-08-21 00:32:47,455 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-8440bcf7-81b8-4352-ad98-3a6e4714d159', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Kernel-Processor-Power\n\nLog entry: 0 11 213253 0 0 0\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:32:47,457 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:32:47,457 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:32:47,458 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:32:47,458 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:32:47,459 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:32:47,459 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:32:47,555 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 20 Aug 2025 19:02:48 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'374'), (b'Connection', b'keep-alive'), (b'CF-RAY', b'972425a7bc183c58-BOM'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'12'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14396'), (b'x-ratelimit-remaining-tokens', b'-1054'), (b'x-ratelimit-reset-requests', b'22.475999999s'), (b'x-ratelimit-reset-tokens', b'1m10.546s'), (b'x-request-id', b'req_01k34dsh7zf6xtf1ycmqkg4w9x'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:32:47,557 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-08-21 00:32:47,558 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:32:47,559 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:32:47,559 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:32:47,560 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:32:47,560 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Wed, 20 Aug 2025 19:02:48 GMT', 'content-type': 'application/json', 'content-length': '374', 'connection': 'keep-alive', 'cf-ray': '972425a7bc183c58-BOM', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'retry-after': '12', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14396', 'x-ratelimit-remaining-tokens': '-1054', 'x-ratelimit-reset-requests': '22.475999999s', 'x-ratelimit-reset-tokens': '1m10.546s', 'x-request-id': 'req_01k34dsh7zf6xtf1ycmqkg4w9x', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:32:47,561 [DEBUG] groq._base_client:1026 - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\groq\_base_client.py", line 1024, in request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-08-21 00:32:47,563 [DEBUG] groq._base_client:772 - Retrying due to status code 429
2025-08-21 00:32:47,563 [DEBUG] groq._base_client:1065 - 2 retries left
2025-08-21 00:32:47,564 [INFO] groq._base_client:1068 - Retrying request to /openai/v1/chat/completions in 12.000000 seconds
2025-08-21 00:32:59,565 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-8440bcf7-81b8-4352-ad98-3a6e4714d159', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Kernel-Processor-Power\n\nLog entry: 0 11 213253 0 0 0\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:32:59,569 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:32:59,570 [DEBUG] httpcore.connection:47 - close.started
2025-08-21 00:32:59,571 [DEBUG] httpcore.connection:47 - close.complete
2025-08-21 00:32:59,571 [DEBUG] httpcore.connection:47 - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-21 00:32:59,650 [DEBUG] httpcore.connection:47 - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF22E1F30>
2025-08-21 00:32:59,652 [DEBUG] httpcore.connection:47 - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000027DF06B8690> server_hostname='api.groq.com' timeout=5.0
2025-08-21 00:32:59,737 [DEBUG] httpcore.connection:47 - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF2326F90>
2025-08-21 00:32:59,737 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:32:59,737 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:32:59,738 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:32:59,739 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:32:59,739 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:33:01,137 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 20 Aug 2025 19:03:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14397'), (b'x-ratelimit-remaining-tokens', b'56'), (b'x-ratelimit-reset-requests', b'16.202s'), (b'x-ratelimit-reset-tokens', b'59.431999999s'), (b'x-request-id', b'req_01k34dsx7heafvpqydw85p7t8r'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'972425f46a65ff71-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:33:01,139 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-21 00:33:01,139 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:33:01,140 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:33:01,140 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:33:01,140 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:33:01,140 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 20 Aug 2025 19:03:01 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'content-encoding': 'gzip', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14397', 'x-ratelimit-remaining-tokens': '56', 'x-ratelimit-reset-requests': '16.202s', 'x-ratelimit-reset-tokens': '59.431999999s', 'x-request-id': 'req_01k34dsx7heafvpqydw85p7t8r', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '972425f46a65ff71-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:33:01,142 [DEBUG] instructor:455 - No compatible response.usage found, token usage not updated.
2025-08-21 00:33:01,142 [DEBUG] instructor:155 - Instructor Raw Response: ChatCompletion(id='chatcmpl-2b31281a-dfbb-4eb4-9c31-2c5352718379', choices=[Choice(finish_reason='tool_calls', index=0, logprobs=None, message=ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='gs0pb2a95', function=Function(arguments='{"event_type":"power_event","summary":"Power event occurred"}', name='ActivityLog'), type='function')]))], created=1755716581, model='llama3-70b-8192', object='chat.completion', system_fingerprint='fp_bf16903a67', usage=CompletionUsage(completion_tokens=83, prompt_tokens=1370, total_tokens=1453, completion_time=0.190314049, prompt_time=0.107084155, queue_time=0.984742527, total_time=0.297398204), usage_breakdown=None, x_groq={'id': 'req_01k34dsx7heafvpqydw85p7t8r'}, service_tier='on_demand')
2025-08-21 00:33:01,143 [INFO] llm_layer:37 - LLM parsing successful for provider: 'Microsoft-Windows-Kernel-Processor-Power'
2025-08-21 00:33:01,144 [INFO] __main__:68 - Successfully parsed log from 'Microsoft-Windows-Kernel-Processor-Power' with LLM.
2025-08-21 00:33:01,144 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Kernel-Processor-Power' at 2025-08-20 22:26:42+00:00. Message: 0 7 213253 0 0 0...
2025-08-21 00:33:01,145 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Kernel-Processor-Power'
2025-08-21 00:33:01,145 [INFO] regex_parsers:201 - No regex match found for provider 'Microsoft-Windows-Kernel-Processor-Power'.
2025-08-21 00:33:01,145 [INFO] __main__:63 - Regex failed for provider 'Microsoft-Windows-Kernel-Processor-Power'. Trying LLM...
2025-08-21 00:33:01,145 [INFO] llm_layer:28 - Attempting LLM parsing for provider: 'Microsoft-Windows-Kernel-Processor-Power'
2025-08-21 00:33:01,147 [DEBUG] instructor:1276 - Instructor Request: mode.value='tool_call', response_model=<class 'config.ActivityLog'>, new_kwargs={'model': 'llama3-70b-8192', 'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Kernel-Processor-Power\n\nLog entry: 0 7 213253 0 0 0\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}], 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}}
2025-08-21 00:33:01,148 [DEBUG] instructor:61 - max_retries: 1, timeout: None
2025-08-21 00:33:01,148 [DEBUG] instructor:183 - Retrying, attempt: 1
2025-08-21 00:33:01,149 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-5b8ccf53-05c8-4256-b253-6b6c10cf590a', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Kernel-Processor-Power\n\nLog entry: 0 7 213253 0 0 0\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:33:01,150 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:33:01,150 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:33:01,151 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:33:01,151 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:33:01,151 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:33:01,152 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:33:01,250 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 20 Aug 2025 19:03:01 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'374'), (b'Connection', b'keep-alive'), (b'CF-RAY', b'972425fd4a5dff71-BOM'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'13'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14397'), (b'x-ratelimit-remaining-tokens', b'-1139'), (b'x-ratelimit-reset-requests', b'16.591999999s'), (b'x-ratelimit-reset-tokens', b'1m11.396s'), (b'x-request-id', b'req_01k34dsykheagre5ahzhk1k7cz'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:33:01,252 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-08-21 00:33:01,253 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:33:01,253 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:33:01,253 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:33:01,254 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:33:01,255 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Wed, 20 Aug 2025 19:03:01 GMT', 'content-type': 'application/json', 'content-length': '374', 'connection': 'keep-alive', 'cf-ray': '972425fd4a5dff71-BOM', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'retry-after': '13', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14397', 'x-ratelimit-remaining-tokens': '-1139', 'x-ratelimit-reset-requests': '16.591999999s', 'x-ratelimit-reset-tokens': '1m11.396s', 'x-request-id': 'req_01k34dsykheagre5ahzhk1k7cz', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:33:01,255 [DEBUG] groq._base_client:1026 - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\groq\_base_client.py", line 1024, in request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-08-21 00:33:01,257 [DEBUG] groq._base_client:772 - Retrying due to status code 429
2025-08-21 00:33:01,257 [DEBUG] groq._base_client:1065 - 2 retries left
2025-08-21 00:33:01,257 [INFO] groq._base_client:1068 - Retrying request to /openai/v1/chat/completions in 13.000000 seconds
2025-08-21 00:33:14,258 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-5b8ccf53-05c8-4256-b253-6b6c10cf590a', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Kernel-Processor-Power\n\nLog entry: 0 7 213253 0 0 0\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:33:14,261 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:33:14,262 [DEBUG] httpcore.connection:47 - close.started
2025-08-21 00:33:14,263 [DEBUG] httpcore.connection:47 - close.complete
2025-08-21 00:33:14,263 [DEBUG] httpcore.connection:47 - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-21 00:33:14,447 [DEBUG] httpcore.connection:47 - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF24945A0>
2025-08-21 00:33:14,448 [DEBUG] httpcore.connection:47 - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000027DF06B8690> server_hostname='api.groq.com' timeout=5.0
2025-08-21 00:33:14,533 [DEBUG] httpcore.connection:47 - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF24946B0>
2025-08-21 00:33:14,533 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:33:14,534 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:33:14,536 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:33:14,537 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:33:14,537 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:33:15,859 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 20 Aug 2025 19:03:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'84'), (b'x-ratelimit-reset-requests', b'9.203999999s'), (b'x-ratelimit-reset-tokens', b'59.158s'), (b'x-request-id', b'req_01k34dtbnyey6bbsdmp2g6606b'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97242650ed7c3a2c-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:33:15,861 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-21 00:33:15,862 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:33:15,863 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:33:15,864 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:33:15,864 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:33:15,864 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 20 Aug 2025 19:03:16 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'content-encoding': 'gzip', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14398', 'x-ratelimit-remaining-tokens': '84', 'x-ratelimit-reset-requests': '9.203999999s', 'x-ratelimit-reset-tokens': '59.158s', 'x-request-id': 'req_01k34dtbnyey6bbsdmp2g6606b', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '97242650ed7c3a2c-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:33:15,867 [DEBUG] instructor:455 - No compatible response.usage found, token usage not updated.
2025-08-21 00:33:15,869 [DEBUG] instructor:155 - Instructor Raw Response: ChatCompletion(id='chatcmpl-235dd36d-e073-4934-b8b8-aac0efa428bf', choices=[Choice(finish_reason='tool_calls', index=0, logprobs=None, message=ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='th207y9c8', function=Function(arguments='{"event_type":"power_event","summary":"Power event occurred"}', name='ActivityLog'), type='function')]))], created=1755716596, model='llama3-70b-8192', object='chat.completion', system_fingerprint='fp_bf16903a67', usage=CompletionUsage(completion_tokens=83, prompt_tokens=1370, total_tokens=1453, completion_time=0.210245317, prompt_time=0.10749008, queue_time=0.905375838, total_time=0.317735397), usage_breakdown=None, x_groq={'id': 'req_01k34dtbnyey6bbsdmp2g6606b'}, service_tier='on_demand')
2025-08-21 00:33:15,871 [INFO] llm_layer:37 - LLM parsing successful for provider: 'Microsoft-Windows-Kernel-Processor-Power'
2025-08-21 00:33:15,872 [INFO] __main__:68 - Successfully parsed log from 'Microsoft-Windows-Kernel-Processor-Power' with LLM.
2025-08-21 00:33:15,872 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Time-Service' at 2025-08-20 22:13:19+00:00. Message: VMICTimeProvider...
2025-08-21 00:33:15,873 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Time-Service'
2025-08-21 00:33:15,873 [INFO] regex_parsers:201 - No regex match found for provider 'Microsoft-Windows-Time-Service'.
2025-08-21 00:33:15,873 [INFO] __main__:63 - Regex failed for provider 'Microsoft-Windows-Time-Service'. Trying LLM...
2025-08-21 00:33:15,873 [INFO] llm_layer:28 - Attempting LLM parsing for provider: 'Microsoft-Windows-Time-Service'
2025-08-21 00:33:15,876 [DEBUG] instructor:1276 - Instructor Request: mode.value='tool_call', response_model=<class 'config.ActivityLog'>, new_kwargs={'model': 'llama3-70b-8192', 'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Time-Service\n\nLog entry: VMICTimeProvider\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}], 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}}
2025-08-21 00:33:15,877 [DEBUG] instructor:61 - max_retries: 1, timeout: None
2025-08-21 00:33:15,877 [DEBUG] instructor:183 - Retrying, attempt: 1
2025-08-21 00:33:15,877 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-af822ab5-fd66-46ad-bc06-1540a3ae284c', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Time-Service\n\nLog entry: VMICTimeProvider\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:33:15,879 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:33:15,879 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:33:15,880 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:33:15,880 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:33:15,881 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:33:15,881 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:33:15,973 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 20 Aug 2025 19:03:16 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'374'), (b'Connection', b'keep-alive'), (b'CF-RAY', b'9724265968d03a2c-BOM'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'13'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'-1119'), (b'x-ratelimit-reset-requests', b'10.645999999s'), (b'x-ratelimit-reset-tokens', b'1m11.191s'), (b'x-request-id', b'req_01k34dtd08eatbe43k4gv1ge4b'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:33:15,975 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-08-21 00:33:15,977 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:33:15,978 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:33:15,978 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:33:15,979 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:33:15,980 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Wed, 20 Aug 2025 19:03:16 GMT', 'content-type': 'application/json', 'content-length': '374', 'connection': 'keep-alive', 'cf-ray': '9724265968d03a2c-BOM', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'retry-after': '13', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14398', 'x-ratelimit-remaining-tokens': '-1119', 'x-ratelimit-reset-requests': '10.645999999s', 'x-ratelimit-reset-tokens': '1m11.191s', 'x-request-id': 'req_01k34dtd08eatbe43k4gv1ge4b', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:33:15,982 [DEBUG] groq._base_client:1026 - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\groq\_base_client.py", line 1024, in request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-08-21 00:33:15,984 [DEBUG] groq._base_client:772 - Retrying due to status code 429
2025-08-21 00:33:15,985 [DEBUG] groq._base_client:1065 - 2 retries left
2025-08-21 00:33:15,985 [INFO] groq._base_client:1068 - Retrying request to /openai/v1/chat/completions in 13.000000 seconds
2025-08-21 00:33:28,986 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-af822ab5-fd66-46ad-bc06-1540a3ae284c', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Time-Service\n\nLog entry: VMICTimeProvider\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:33:28,988 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:33:28,988 [DEBUG] httpcore.connection:47 - close.started
2025-08-21 00:33:28,989 [DEBUG] httpcore.connection:47 - close.complete
2025-08-21 00:33:28,989 [DEBUG] httpcore.connection:47 - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-21 00:33:29,246 [DEBUG] httpcore.connection:47 - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF237B250>
2025-08-21 00:33:29,247 [DEBUG] httpcore.connection:47 - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000027DF06B8690> server_hostname='api.groq.com' timeout=5.0
2025-08-21 00:33:29,326 [DEBUG] httpcore.connection:47 - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF237B350>
2025-08-21 00:33:29,326 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:33:29,327 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:33:29,327 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:33:29,327 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:33:29,328 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:33:29,959 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 20 Aug 2025 19:03:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'112'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'58.871s'), (b'x-request-id', b'req_01k34dtt4jf879hsqnzgay3cf5'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'972426ad68a03ca0-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:33:29,960 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-21 00:33:29,961 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:33:29,962 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:33:29,962 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:33:29,963 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:33:29,963 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 20 Aug 2025 19:03:30 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'content-encoding': 'gzip', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '112', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '58.871s', 'x-request-id': 'req_01k34dtt4jf879hsqnzgay3cf5', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '972426ad68a03ca0-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:33:29,966 [DEBUG] instructor:455 - No compatible response.usage found, token usage not updated.
2025-08-21 00:33:29,966 [DEBUG] instructor:155 - Instructor Raw Response: ChatCompletion(id='chatcmpl-8297244e-bdd0-4c5e-8a62-215adff8f637', choices=[Choice(finish_reason='tool_calls', index=0, logprobs=None, message=ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='d4n47gx75', function=Function(arguments='{"event_type":"system_event","summary":"VMICTimeProvider"}', name='ActivityLog'), type='function')]))], created=1755716610, model='llama3-70b-8192', object='chat.completion', system_fingerprint='fp_bf16903a67', usage=CompletionUsage(completion_tokens=77, prompt_tokens=1359, total_tokens=1436, completion_time=0.162792414, prompt_time=0.105313142, queue_time=0.264617096, total_time=0.268105556), usage_breakdown=None, x_groq={'id': 'req_01k34dtt4jf879hsqnzgay3cf5'}, service_tier='on_demand')
2025-08-21 00:33:29,969 [INFO] llm_layer:37 - LLM parsing successful for provider: 'Microsoft-Windows-Time-Service'
2025-08-21 00:33:29,971 [INFO] __main__:68 - Successfully parsed log from 'Microsoft-Windows-Time-Service' with LLM.
2025-08-21 00:33:29,972 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Kernel-Power' at 2025-08-20 21:58:24+00:00. Message: 21 32 155 1 86881755 28225 34337 28712 34337 157 0 true 32...
2025-08-21 00:33:29,972 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Kernel-Power'
2025-08-21 00:33:29,972 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?:The system is entering sleep\.|The system is exiting sleep\.|(?:Sleep|Hibernate) Time: (?P<sleep_time>.*))(?P<sleep_details>.*)?|(?:Shutdown reason: (?P<shutdown_reason>.*))(?P<shutdown_details>.*)?|(?P<message>.*)
2025-08-21 00:33:29,973 [INFO] regex_parsers:199 - Successfully parsed log from 'Microsoft-Windows-Kernel-Power' with regex.
2025-08-21 00:33:29,973 [DEBUG] regex_parsers:45 - Regex handler 'handle_kernel_power' matched groups: {'sleep_time': None, 'sleep_details': None, 'shutdown_reason': None, 'shutdown_details': None, 'message': '21 32 155 1 86881755 28225 34337 28712 34337 157 0 true 32'}
2025-08-21 00:33:29,973 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Kernel-Power' at 2025-08-20 21:58:24+00:00. Message: 0 86883127 0 0 0 86883127 0 83 false 32 0 0 true 0 259027 false true 0 7 0 true false 157 false 2871...
2025-08-21 00:33:29,974 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Kernel-Power'
2025-08-21 00:33:29,974 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?:The system is entering sleep\.|The system is exiting sleep\.|(?:Sleep|Hibernate) Time: (?P<sleep_time>.*))(?P<sleep_details>.*)?|(?:Shutdown reason: (?P<shutdown_reason>.*))(?P<shutdown_details>.*)?|(?P<message>.*)
2025-08-21 00:33:29,974 [INFO] regex_parsers:199 - Successfully parsed log from 'Microsoft-Windows-Kernel-Power' with regex.
2025-08-21 00:33:29,974 [DEBUG] regex_parsers:45 - Regex handler 'handle_kernel_power' matched groups: {'sleep_time': None, 'sleep_details': None, 'shutdown_reason': None, 'shutdown_details': None, 'message': '0 86883127 0 0 0 86883127 0 83 false 32 0 0 true 0 259027 false true 0 7 0 true false 157 false 28712 34337 155 21 0 86883127 0 0 0 0 257981 false 28225 28712 86881755 0 0 0 34337 34337 0 0 4 0'}
2025-08-21 00:33:29,975 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-WindowsUpdateClient' at 2025-08-20 21:58:23+00:00. Message: 9PC1H9VN18CM-Microsoft.StartExperiencesApp {229255a3-3066-4a5d-b2d8-23f7e4f822aa} 1 {855e8a7c-ecb4-4...
2025-08-21 00:33:29,975 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-WindowsUpdateClient'
2025-08-21 00:33:29,975 [INFO] regex_parsers:201 - No regex match found for provider 'Microsoft-Windows-WindowsUpdateClient'.
2025-08-21 00:33:29,975 [INFO] __main__:63 - Regex failed for provider 'Microsoft-Windows-WindowsUpdateClient'. Trying LLM...
2025-08-21 00:33:29,976 [INFO] llm_layer:28 - Attempting LLM parsing for provider: 'Microsoft-Windows-WindowsUpdateClient'
2025-08-21 00:33:29,978 [DEBUG] instructor:1276 - Instructor Request: mode.value='tool_call', response_model=<class 'config.ActivityLog'>, new_kwargs={'model': 'llama3-70b-8192', 'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-WindowsUpdateClient\n\nLog entry: 9PC1H9VN18CM-Microsoft.StartExperiencesApp {229255a3-3066-4a5d-b2d8-23f7e4f822aa} 1 {855e8a7c-ecb4-4ca3-b045-1dfa50104289}\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}], 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}}
2025-08-21 00:33:29,981 [DEBUG] instructor:61 - max_retries: 1, timeout: None
2025-08-21 00:33:29,981 [DEBUG] instructor:183 - Retrying, attempt: 1
2025-08-21 00:33:29,982 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-6b402d8d-98f7-44e0-9a38-37ccbef24584', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-WindowsUpdateClient\n\nLog entry: 9PC1H9VN18CM-Microsoft.StartExperiencesApp {229255a3-3066-4a5d-b2d8-23f7e4f822aa} 1 {855e8a7c-ecb4-4ca3-b045-1dfa50104289}\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:33:29,983 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:33:29,983 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:33:29,984 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:33:29,984 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:33:29,984 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:33:29,985 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:33:30,073 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 20 Aug 2025 19:03:30 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'380'), (b'Connection', b'keep-alive'), (b'CF-RAY', b'972426b19aa73ca0-BOM'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'13'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'-1145'), (b'x-ratelimit-reset-requests', b'5.346999999s'), (b'x-ratelimit-reset-tokens', b'1m11.451s'), (b'x-request-id', b'req_01k34dttrzeyk92ybvfznrrp0g'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:33:30,075 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-08-21 00:33:30,076 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:33:30,076 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:33:30,077 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:33:30,077 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:33:30,078 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Wed, 20 Aug 2025 19:03:30 GMT', 'content-type': 'application/json', 'content-length': '380', 'connection': 'keep-alive', 'cf-ray': '972426b19aa73ca0-BOM', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'retry-after': '13', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '-1145', 'x-ratelimit-reset-requests': '5.346999999s', 'x-ratelimit-reset-tokens': '1m11.451s', 'x-request-id': 'req_01k34dttrzeyk92ybvfznrrp0g', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:33:30,079 [DEBUG] groq._base_client:1026 - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\groq\_base_client.py", line 1024, in request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-08-21 00:33:30,080 [DEBUG] groq._base_client:772 - Retrying due to status code 429
2025-08-21 00:33:30,081 [DEBUG] groq._base_client:1065 - 2 retries left
2025-08-21 00:33:30,081 [INFO] groq._base_client:1068 - Retrying request to /openai/v1/chat/completions in 13.000000 seconds
2025-08-21 00:33:43,082 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-6b402d8d-98f7-44e0-9a38-37ccbef24584', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-WindowsUpdateClient\n\nLog entry: 9PC1H9VN18CM-Microsoft.StartExperiencesApp {229255a3-3066-4a5d-b2d8-23f7e4f822aa} 1 {855e8a7c-ecb4-4ca3-b045-1dfa50104289}\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:33:43,085 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:33:43,086 [DEBUG] httpcore.connection:47 - close.started
2025-08-21 00:33:43,088 [DEBUG] httpcore.connection:47 - close.complete
2025-08-21 00:33:43,088 [DEBUG] httpcore.connection:47 - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-21 00:33:43,167 [DEBUG] httpcore.connection:47 - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF24A5220>
2025-08-21 00:33:43,168 [DEBUG] httpcore.connection:47 - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000027DF06B8690> server_hostname='api.groq.com' timeout=5.0
2025-08-21 00:33:43,272 [DEBUG] httpcore.connection:47 - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF24A5310>
2025-08-21 00:33:43,274 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:33:43,274 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:33:43,275 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:33:43,275 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:33:43,276 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:33:45,249 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 20 Aug 2025 19:03:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'43'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'59.563s'), (b'x-request-id', b'req_01k34dv7rhebf9k7hxmpps723z'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97242704acdfff69-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:33:45,251 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-21 00:33:45,252 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:33:45,253 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:33:45,254 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:33:45,254 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:33:45,255 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 20 Aug 2025 19:03:45 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'content-encoding': 'gzip', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '43', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '59.563s', 'x-request-id': 'req_01k34dv7rhebf9k7hxmpps723z', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '97242704acdfff69-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:33:45,257 [DEBUG] instructor:455 - No compatible response.usage found, token usage not updated.
2025-08-21 00:33:45,258 [DEBUG] instructor:155 - Instructor Raw Response: ChatCompletion(id='chatcmpl-0a055ec2-6f4d-4b81-abd3-a56e89d29a03', choices=[Choice(finish_reason='tool_calls', index=0, logprobs=None, message=ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='d5h1qbfmg', function=Function(arguments='{"app_name":"Microsoft.Windows.Update.Client","event_type":"app_lifecycle","summary":"Started Experiences App"}', name='ActivityLog'), type='function')]))], created=1755716626, model='llama3-70b-8192', object='chat.completion', system_fingerprint='fp_bf16903a67', usage=CompletionUsage(completion_tokens=65, prompt_tokens=1422, total_tokens=1487, completion_time=0.194682562, prompt_time=0.110869842, queue_time=1.546555021, total_time=0.305552404), usage_breakdown=None, x_groq={'id': 'req_01k34dv7rhebf9k7hxmpps723z'}, service_tier='on_demand')
2025-08-21 00:33:45,259 [INFO] llm_layer:37 - LLM parsing successful for provider: 'Microsoft-Windows-WindowsUpdateClient'
2025-08-21 00:33:45,260 [INFO] __main__:68 - Successfully parsed log from 'Microsoft-Windows-WindowsUpdateClient' with LLM.
2025-08-21 00:33:45,260 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Kernel-General' at 2025-08-20 21:58:21+00:00. Message: 104 \??\C:\Users\Hp\AppData\Local\Packages\Microsoft.StartExperiencesApp_8wekyb3d8bbwe\Settings\sett...
2025-08-21 00:33:45,261 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Kernel-General'
2025-08-21 00:33:45,261 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?P<code>\d+)\s+(?P<file_path>\\[^\\].*)\s+(?P<param1>\d+)\s+(?P<param2>\d+)
2025-08-21 00:33:45,261 [INFO] regex_parsers:199 - Successfully parsed log from 'Microsoft-Windows-Kernel-General' with regex.
2025-08-21 00:33:45,262 [DEBUG] regex_parsers:82 - Regex handler 'handle_kernel_general' matched groups: {'code': '104', 'file_path': '\\??\\C:\\Users\\Hp\\AppData\\Local\\Packages\\Microsoft.StartExperiencesApp_8wekyb3d8bbwe\\Settings\\settings.dat', 'param1': '1', 'param2': '1'}
2025-08-21 00:33:45,262 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-WindowsUpdateClient' at 2025-08-20 21:58:19+00:00. Message: 9PC1H9VN18CM-Microsoft.StartExperiencesApp {229255a3-3066-4a5d-b2d8-23f7e4f822aa} 1...
2025-08-21 00:33:45,262 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-WindowsUpdateClient'
2025-08-21 00:33:45,263 [INFO] regex_parsers:201 - No regex match found for provider 'Microsoft-Windows-WindowsUpdateClient'.
2025-08-21 00:33:45,263 [INFO] __main__:63 - Regex failed for provider 'Microsoft-Windows-WindowsUpdateClient'. Trying LLM...
2025-08-21 00:33:45,263 [INFO] llm_layer:28 - Attempting LLM parsing for provider: 'Microsoft-Windows-WindowsUpdateClient'
2025-08-21 00:33:45,265 [DEBUG] instructor:1276 - Instructor Request: mode.value='tool_call', response_model=<class 'config.ActivityLog'>, new_kwargs={'model': 'llama3-70b-8192', 'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-WindowsUpdateClient\n\nLog entry: 9PC1H9VN18CM-Microsoft.StartExperiencesApp {229255a3-3066-4a5d-b2d8-23f7e4f822aa} 1\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}], 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}}
2025-08-21 00:33:45,266 [DEBUG] instructor:61 - max_retries: 1, timeout: None
2025-08-21 00:33:45,266 [DEBUG] instructor:183 - Retrying, attempt: 1
2025-08-21 00:33:45,267 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-562f01ca-2ec5-4957-bb6b-b8dda7e1881c', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-WindowsUpdateClient\n\nLog entry: 9PC1H9VN18CM-Microsoft.StartExperiencesApp {229255a3-3066-4a5d-b2d8-23f7e4f822aa} 1\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:33:45,268 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:33:45,269 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:33:45,269 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:33:45,270 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:33:45,270 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:33:45,270 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:33:45,355 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 20 Aug 2025 19:03:46 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'374'), (b'Connection', b'keep-alive'), (b'CF-RAY', b'97242711091bff69-BOM'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'13'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'-1104'), (b'x-ratelimit-reset-requests', b'4.021s'), (b'x-ratelimit-reset-tokens', b'1m11.046s'), (b'x-request-id', b'req_01k34dv9pdeyx9zfp8nwyc6s29'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:33:45,356 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-08-21 00:33:45,357 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:33:45,358 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:33:45,358 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:33:45,359 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:33:45,359 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Wed, 20 Aug 2025 19:03:46 GMT', 'content-type': 'application/json', 'content-length': '374', 'connection': 'keep-alive', 'cf-ray': '97242711091bff69-BOM', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'retry-after': '13', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '-1104', 'x-ratelimit-reset-requests': '4.021s', 'x-ratelimit-reset-tokens': '1m11.046s', 'x-request-id': 'req_01k34dv9pdeyx9zfp8nwyc6s29', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:33:45,360 [DEBUG] groq._base_client:1026 - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\groq\_base_client.py", line 1024, in request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-08-21 00:33:45,361 [DEBUG] groq._base_client:772 - Retrying due to status code 429
2025-08-21 00:33:45,361 [DEBUG] groq._base_client:1065 - 2 retries left
2025-08-21 00:33:45,362 [INFO] groq._base_client:1068 - Retrying request to /openai/v1/chat/completions in 13.000000 seconds
2025-08-21 00:33:58,363 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-562f01ca-2ec5-4957-bb6b-b8dda7e1881c', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-WindowsUpdateClient\n\nLog entry: 9PC1H9VN18CM-Microsoft.StartExperiencesApp {229255a3-3066-4a5d-b2d8-23f7e4f822aa} 1\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:33:58,368 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:33:58,370 [DEBUG] httpcore.connection:47 - close.started
2025-08-21 00:33:58,371 [DEBUG] httpcore.connection:47 - close.complete
2025-08-21 00:33:58,371 [DEBUG] httpcore.connection:47 - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-21 00:33:58,467 [DEBUG] httpcore.connection:47 - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF2491C50>
2025-08-21 00:33:58,469 [DEBUG] httpcore.connection:47 - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000027DF06B8690> server_hostname='api.groq.com' timeout=5.0
2025-08-21 00:33:58,582 [DEBUG] httpcore.connection:47 - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF2491B70>
2025-08-21 00:33:58,583 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:33:58,584 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:33:58,584 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:33:58,585 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:33:58,585 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:33:59,280 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 20 Aug 2025 19:03:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'96'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'59.031s'), (b'x-request-id', b'req_01k34dvpptf8yahkb0wmfz95mq'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'972427645a7147d0-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:33:59,281 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-21 00:33:59,282 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:33:59,283 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:33:59,283 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:33:59,283 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:33:59,284 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 20 Aug 2025 19:03:59 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'content-encoding': 'gzip', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '96', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '59.031s', 'x-request-id': 'req_01k34dvpptf8yahkb0wmfz95mq', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '972427645a7147d0-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:33:59,286 [DEBUG] instructor:455 - No compatible response.usage found, token usage not updated.
2025-08-21 00:33:59,287 [DEBUG] instructor:155 - Instructor Raw Response: ChatCompletion(id='chatcmpl-20e80e1d-3c15-4517-95d3-8553daa8d7fe', choices=[Choice(finish_reason='tool_calls', index=0, logprobs=None, message=ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='t0y7qkma9', function=Function(arguments='{"app_name":"Microsoft.StartExperiencesApp","event_type":"app_lifecycle","summary":"Microsoft.StartExperiencesApp started"}', name='ActivityLog'), type='function')]))], created=1755716640, model='llama3-70b-8192', object='chat.completion', system_fingerprint='fp_bf16903a67', usage=CompletionUsage(completion_tokens=91, prompt_tokens=1399, total_tokens=1490, completion_time=0.191219889, prompt_time=0.108653205, queue_time=0.266460703, total_time=0.299873094), usage_breakdown=None, x_groq={'id': 'req_01k34dvpptf8yahkb0wmfz95mq'}, service_tier='on_demand')
2025-08-21 00:33:59,290 [INFO] llm_layer:37 - LLM parsing successful for provider: 'Microsoft-Windows-WindowsUpdateClient'
2025-08-21 00:33:59,291 [INFO] __main__:68 - Successfully parsed log from 'Microsoft-Windows-WindowsUpdateClient' with LLM.
2025-08-21 00:33:59,293 [DEBUG] log_fetcher:32 - Read a chunk of 10 events.
2025-08-21 00:33:59,293 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Kernel-General' at 2025-08-20 21:58:08+00:00. Message: 137 \??\C:\ProgramData\Microsoft\Windows\AppRepository\Packages\Microsoft.StartExperiencesApp_1.92.1...
2025-08-21 00:33:59,294 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Kernel-General'
2025-08-21 00:33:59,294 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?P<code>\d+)\s+(?P<file_path>\\[^\\].*)\s+(?P<param1>\d+)\s+(?P<param2>\d+)
2025-08-21 00:33:59,294 [INFO] regex_parsers:199 - Successfully parsed log from 'Microsoft-Windows-Kernel-General' with regex.
2025-08-21 00:33:59,294 [DEBUG] regex_parsers:82 - Regex handler 'handle_kernel_general' matched groups: {'code': '137', 'file_path': '\\??\\C:\\ProgramData\\Microsoft\\Windows\\AppRepository\\Packages\\Microsoft.StartExperiencesApp_1.92.1.0_x64__8wekyb3d8bbwe\\ActivationStore.dat', 'param1': '0', 'param2': '0'}
2025-08-21 00:33:59,295 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Kernel-Power' at 2025-08-20 21:56:57+00:00. Message: 12 true false 155 28225 34337 155 21...
2025-08-21 00:33:59,295 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Kernel-Power'
2025-08-21 00:33:59,295 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?:The system is entering sleep\.|The system is exiting sleep\.|(?:Sleep|Hibernate) Time: (?P<sleep_time>.*))(?P<sleep_details>.*)?|(?:Shutdown reason: (?P<shutdown_reason>.*))(?P<shutdown_details>.*)?|(?P<message>.*)
2025-08-21 00:33:59,295 [INFO] regex_parsers:199 - Successfully parsed log from 'Microsoft-Windows-Kernel-Power' with regex.
2025-08-21 00:33:59,295 [DEBUG] regex_parsers:45 - Regex handler 'handle_kernel_power' matched groups: {'sleep_time': None, 'sleep_details': None, 'shutdown_reason': None, 'shutdown_details': None, 'message': '12 true false 155 28225 34337 155 21'}
2025-08-21 00:33:59,296 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Kernel-Power' at 2025-08-20 21:56:57+00:00. Message: 21 12 154 0 3458758260 3900 34337 28225 34337 155 1 true 12...
2025-08-21 00:33:59,296 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Kernel-Power'
2025-08-21 00:33:59,296 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?:The system is entering sleep\.|The system is exiting sleep\.|(?:Sleep|Hibernate) Time: (?P<sleep_time>.*))(?P<sleep_details>.*)?|(?:Shutdown reason: (?P<shutdown_reason>.*))(?P<shutdown_details>.*)?|(?P<message>.*)
2025-08-21 00:33:59,296 [INFO] regex_parsers:199 - Successfully parsed log from 'Microsoft-Windows-Kernel-Power' with regex.
2025-08-21 00:33:59,296 [DEBUG] regex_parsers:45 - Regex handler 'handle_kernel_power' matched groups: {'sleep_time': None, 'sleep_details': None, 'shutdown_reason': None, 'shutdown_details': None, 'message': '21 12 154 0 3458758260 3900 34337 28225 34337 155 1 true 12'}
2025-08-21 00:33:59,296 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-WindowsUpdateClient' at 2025-08-20 21:56:17+00:00. Message: 9PC1H9VN18CM-Microsoft.StartExperiencesApp {229255a3-3066-4a5d-b2d8-23f7e4f822aa} 1...
2025-08-21 00:33:59,296 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-WindowsUpdateClient'
2025-08-21 00:33:59,296 [INFO] regex_parsers:201 - No regex match found for provider 'Microsoft-Windows-WindowsUpdateClient'.
2025-08-21 00:33:59,296 [INFO] __main__:63 - Regex failed for provider 'Microsoft-Windows-WindowsUpdateClient'. Trying LLM...
2025-08-21 00:33:59,297 [INFO] llm_layer:28 - Attempting LLM parsing for provider: 'Microsoft-Windows-WindowsUpdateClient'
2025-08-21 00:33:59,298 [DEBUG] instructor:1276 - Instructor Request: mode.value='tool_call', response_model=<class 'config.ActivityLog'>, new_kwargs={'model': 'llama3-70b-8192', 'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-WindowsUpdateClient\n\nLog entry: 9PC1H9VN18CM-Microsoft.StartExperiencesApp {229255a3-3066-4a5d-b2d8-23f7e4f822aa} 1\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}], 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}}
2025-08-21 00:33:59,299 [DEBUG] instructor:61 - max_retries: 1, timeout: None
2025-08-21 00:33:59,299 [DEBUG] instructor:183 - Retrying, attempt: 1
2025-08-21 00:33:59,300 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-d182a64f-e53f-44e1-90af-12cda9df7873', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-WindowsUpdateClient\n\nLog entry: 9PC1H9VN18CM-Microsoft.StartExperiencesApp {229255a3-3066-4a5d-b2d8-23f7e4f822aa} 1\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:33:59,301 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:33:59,302 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:33:59,302 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:33:59,302 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:33:59,303 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:33:59,303 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:33:59,419 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 20 Aug 2025 19:04:00 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'374'), (b'Connection', b'keep-alive'), (b'CF-RAY', b'97242768dcdb47d0-BOM'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'14'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'-1191'), (b'x-ratelimit-reset-requests', b'5.284999999s'), (b'x-ratelimit-reset-tokens', b'1m11.911999999s'), (b'x-request-id', b'req_01k34dvqd6ebnvb6wntcbv59ef'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:33:59,422 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-08-21 00:33:59,424 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:33:59,426 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:33:59,426 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:33:59,427 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:33:59,427 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Wed, 20 Aug 2025 19:04:00 GMT', 'content-type': 'application/json', 'content-length': '374', 'connection': 'keep-alive', 'cf-ray': '97242768dcdb47d0-BOM', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'retry-after': '14', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '-1191', 'x-ratelimit-reset-requests': '5.284999999s', 'x-ratelimit-reset-tokens': '1m11.911999999s', 'x-request-id': 'req_01k34dvqd6ebnvb6wntcbv59ef', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:33:59,427 [DEBUG] groq._base_client:1026 - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\groq\_base_client.py", line 1024, in request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-08-21 00:33:59,428 [DEBUG] groq._base_client:772 - Retrying due to status code 429
2025-08-21 00:33:59,428 [DEBUG] groq._base_client:1065 - 2 retries left
2025-08-21 00:33:59,428 [INFO] groq._base_client:1068 - Retrying request to /openai/v1/chat/completions in 14.000000 seconds
2025-08-21 00:34:13,429 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-d182a64f-e53f-44e1-90af-12cda9df7873', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-WindowsUpdateClient\n\nLog entry: 9PC1H9VN18CM-Microsoft.StartExperiencesApp {229255a3-3066-4a5d-b2d8-23f7e4f822aa} 1\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:34:13,432 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:34:13,432 [DEBUG] httpcore.connection:47 - close.started
2025-08-21 00:34:13,433 [DEBUG] httpcore.connection:47 - close.complete
2025-08-21 00:34:13,433 [DEBUG] httpcore.connection:47 - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-21 00:34:14,529 [DEBUG] httpcore.connection:47 - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF24825B0>
2025-08-21 00:34:14,530 [DEBUG] httpcore.connection:47 - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000027DF06B8690> server_hostname='api.groq.com' timeout=5.0
2025-08-21 00:34:14,622 [DEBUG] httpcore.connection:47 - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF2313F50>
2025-08-21 00:34:14,623 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:34:14,624 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:34:14,624 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:34:14,624 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:34:14,625 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:34:15,291 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 20 Aug 2025 19:04:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'208'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'57.912s'), (b'x-request-id', b'req_01k34dw6bmec0ajvyscnsf24kd'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'972427c889674455-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:34:15,293 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-21 00:34:15,293 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:34:15,294 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:34:15,295 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:34:15,296 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:34:15,297 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 20 Aug 2025 19:04:16 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'content-encoding': 'gzip', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '208', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '57.912s', 'x-request-id': 'req_01k34dw6bmec0ajvyscnsf24kd', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '972427c889674455-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:34:15,300 [DEBUG] instructor:455 - No compatible response.usage found, token usage not updated.
2025-08-21 00:34:15,301 [DEBUG] instructor:155 - Instructor Raw Response: ChatCompletion(id='chatcmpl-f7e5ee1f-013d-4a7f-913a-37326c62b55d', choices=[Choice(finish_reason='tool_calls', index=0, logprobs=None, message=ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='fnfp2qqv2', function=Function(arguments='{"app_name":"Microsoft.StartExperiencesApp","event_type":"app_lifecycle","summary":"Microsoft.StartExperiencesApp started"}', name='ActivityLog'), type='function')]))], created=1755716656, model='llama3-70b-8192', object='chat.completion', system_fingerprint='fp_bf16903a67', usage=CompletionUsage(completion_tokens=91, prompt_tokens=1399, total_tokens=1490, completion_time=0.189300308, prompt_time=0.110898317, queue_time=0.263067314, total_time=0.300198625), usage_breakdown=None, x_groq={'id': 'req_01k34dw6bmec0ajvyscnsf24kd'}, service_tier='on_demand')
2025-08-21 00:34:15,304 [INFO] llm_layer:37 - LLM parsing successful for provider: 'Microsoft-Windows-WindowsUpdateClient'
2025-08-21 00:34:15,305 [INFO] __main__:68 - Successfully parsed log from 'Microsoft-Windows-WindowsUpdateClient' with LLM.
2025-08-21 00:34:15,305 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Time-Service' at 2025-08-20 21:55:59+00:00. Message: time.windows.com,0x9 (ntp.m|0x9|0.0.0.0:123->40.81.94.65:123)...
2025-08-21 00:34:15,306 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Time-Service'
2025-08-21 00:34:15,306 [INFO] regex_parsers:201 - No regex match found for provider 'Microsoft-Windows-Time-Service'.
2025-08-21 00:34:15,306 [INFO] __main__:63 - Regex failed for provider 'Microsoft-Windows-Time-Service'. Trying LLM...
2025-08-21 00:34:15,307 [INFO] llm_layer:28 - Attempting LLM parsing for provider: 'Microsoft-Windows-Time-Service'
2025-08-21 00:34:15,309 [DEBUG] instructor:1276 - Instructor Request: mode.value='tool_call', response_model=<class 'config.ActivityLog'>, new_kwargs={'model': 'llama3-70b-8192', 'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Time-Service\n\nLog entry: time.windows.com,0x9 (ntp.m|0x9|0.0.0.0:123->40.81.94.65:123)\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}], 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}}
2025-08-21 00:34:15,310 [DEBUG] instructor:61 - max_retries: 1, timeout: None
2025-08-21 00:34:15,310 [DEBUG] instructor:183 - Retrying, attempt: 1
2025-08-21 00:34:15,311 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ed3ce904-1b84-4c6c-8cbf-9a87a49dd18b', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Time-Service\n\nLog entry: time.windows.com,0x9 (ntp.m|0x9|0.0.0.0:123->40.81.94.65:123)\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:34:15,312 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:34:15,313 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:34:15,314 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:34:15,314 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:34:15,314 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:34:15,314 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:34:15,412 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 20 Aug 2025 19:04:16 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'374'), (b'Connection', b'keep-alive'), (b'CF-RAY', b'972427cceb464455-BOM'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'13'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'-1079'), (b'x-ratelimit-reset-requests', b'5.292999999s'), (b'x-ratelimit-reset-tokens', b'1m10.798s'), (b'x-request-id', b'req_01k34dw71rezgajb9pznr4dw2v'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:34:15,414 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-08-21 00:34:15,416 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:34:15,417 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:34:15,417 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:34:15,418 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:34:15,419 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Wed, 20 Aug 2025 19:04:16 GMT', 'content-type': 'application/json', 'content-length': '374', 'connection': 'keep-alive', 'cf-ray': '972427cceb464455-BOM', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'retry-after': '13', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '-1079', 'x-ratelimit-reset-requests': '5.292999999s', 'x-ratelimit-reset-tokens': '1m10.798s', 'x-request-id': 'req_01k34dw71rezgajb9pznr4dw2v', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:34:15,420 [DEBUG] groq._base_client:1026 - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\groq\_base_client.py", line 1024, in request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-08-21 00:34:15,422 [DEBUG] groq._base_client:772 - Retrying due to status code 429
2025-08-21 00:34:15,422 [DEBUG] groq._base_client:1065 - 2 retries left
2025-08-21 00:34:15,423 [INFO] groq._base_client:1068 - Retrying request to /openai/v1/chat/completions in 13.000000 seconds
2025-08-21 00:34:28,423 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ed3ce904-1b84-4c6c-8cbf-9a87a49dd18b', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Time-Service\n\nLog entry: time.windows.com,0x9 (ntp.m|0x9|0.0.0.0:123->40.81.94.65:123)\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:34:28,425 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:34:28,425 [DEBUG] httpcore.connection:47 - close.started
2025-08-21 00:34:28,426 [DEBUG] httpcore.connection:47 - close.complete
2025-08-21 00:34:28,426 [DEBUG] httpcore.connection:47 - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-21 00:34:28,567 [DEBUG] httpcore.connection:47 - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF2313890>
2025-08-21 00:34:28,569 [DEBUG] httpcore.connection:47 - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000027DF06B8690> server_hostname='api.groq.com' timeout=5.0
2025-08-21 00:34:28,659 [DEBUG] httpcore.connection:47 - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF068E150>
2025-08-21 00:34:28,659 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:34:28,659 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:34:28,660 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:34:28,660 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:34:28,660 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:34:30,477 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 20 Aug 2025 19:04:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'130'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'58.7s'), (b'x-request-id', b'req_01k34dwm2kf9wr5qb24d4qstzy'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'972428204baf3d36-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:34:30,478 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-21 00:34:30,480 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:34:30,481 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:34:30,481 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:34:30,482 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:34:30,482 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 20 Aug 2025 19:04:31 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'content-encoding': 'gzip', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '130', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '58.7s', 'x-request-id': 'req_01k34dwm2kf9wr5qb24d4qstzy', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '972428204baf3d36-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:34:30,484 [DEBUG] instructor:455 - No compatible response.usage found, token usage not updated.
2025-08-21 00:34:30,484 [DEBUG] instructor:155 - Instructor Raw Response: ChatCompletion(id='chatcmpl-892d50d9-58e1-4b74-b726-f793ba388939', choices=[Choice(finish_reason='tool_calls', index=0, logprobs=None, message=ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='tst54vw8d', function=Function(arguments='{"app_name":"Microsoft-Windows-Time-Service","event_subtype":"ntp_sync","event_type":"system_event","summary":"Time service synchronized with time.windows.com"}', name='ActivityLog'), type='function')]))], created=1755716671, model='llama3-70b-8192', object='chat.completion', system_fingerprint='fp_bf16903a67', usage=CompletionUsage(completion_tokens=102, prompt_tokens=1388, total_tokens=1490, completion_time=0.230671674, prompt_time=0.108840386, queue_time=1.324139323, total_time=0.33951206), usage_breakdown=None, x_groq={'id': 'req_01k34dwm2kf9wr5qb24d4qstzy'}, service_tier='on_demand')
2025-08-21 00:34:30,485 [INFO] llm_layer:37 - LLM parsing successful for provider: 'Microsoft-Windows-Time-Service'
2025-08-21 00:34:30,486 [INFO] __main__:68 - Successfully parsed log from 'Microsoft-Windows-Time-Service' with LLM.
2025-08-21 00:34:30,486 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Time-Service' at 2025-08-20 21:55:59+00:00. Message: VMICTimeProvider...
2025-08-21 00:34:30,486 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Time-Service'
2025-08-21 00:34:30,486 [INFO] regex_parsers:201 - No regex match found for provider 'Microsoft-Windows-Time-Service'.
2025-08-21 00:34:30,486 [INFO] __main__:63 - Regex failed for provider 'Microsoft-Windows-Time-Service'. Trying LLM...
2025-08-21 00:34:30,487 [INFO] llm_layer:28 - Attempting LLM parsing for provider: 'Microsoft-Windows-Time-Service'
2025-08-21 00:34:30,490 [DEBUG] instructor:1276 - Instructor Request: mode.value='tool_call', response_model=<class 'config.ActivityLog'>, new_kwargs={'model': 'llama3-70b-8192', 'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Time-Service\n\nLog entry: VMICTimeProvider\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}], 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}}
2025-08-21 00:34:30,491 [DEBUG] instructor:61 - max_retries: 1, timeout: None
2025-08-21 00:34:30,491 [DEBUG] instructor:183 - Retrying, attempt: 1
2025-08-21 00:34:30,492 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e28bed74-78c9-4a7f-a1c3-e628de74f916', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Time-Service\n\nLog entry: VMICTimeProvider\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:34:30,493 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:34:30,493 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:34:30,494 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:34:30,494 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:34:30,495 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:34:30,495 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:34:30,600 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 20 Aug 2025 19:04:31 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'374'), (b'Connection', b'keep-alive'), (b'CF-RAY', b'9724282bba8a3d36-BOM'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'12'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'-1053'), (b'x-ratelimit-reset-requests', b'4.173999999s'), (b'x-ratelimit-reset-tokens', b'1m10.539s'), (b'x-request-id', b'req_01k34dwnvnec7rxxeyw9g0ty4k'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:34:30,603 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-08-21 00:34:30,604 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:34:30,605 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:34:30,605 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:34:30,606 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:34:30,606 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Wed, 20 Aug 2025 19:04:31 GMT', 'content-type': 'application/json', 'content-length': '374', 'connection': 'keep-alive', 'cf-ray': '9724282bba8a3d36-BOM', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'retry-after': '12', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '-1053', 'x-ratelimit-reset-requests': '4.173999999s', 'x-ratelimit-reset-tokens': '1m10.539s', 'x-request-id': 'req_01k34dwnvnec7rxxeyw9g0ty4k', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:34:30,607 [DEBUG] groq._base_client:1026 - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\groq\_base_client.py", line 1024, in request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-08-21 00:34:30,609 [DEBUG] groq._base_client:772 - Retrying due to status code 429
2025-08-21 00:34:30,609 [DEBUG] groq._base_client:1065 - 2 retries left
2025-08-21 00:34:30,610 [INFO] groq._base_client:1068 - Retrying request to /openai/v1/chat/completions in 12.000000 seconds
2025-08-21 00:34:42,610 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e28bed74-78c9-4a7f-a1c3-e628de74f916', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Time-Service\n\nLog entry: VMICTimeProvider\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:34:42,612 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:34:42,612 [DEBUG] httpcore.connection:47 - close.started
2025-08-21 00:34:42,613 [DEBUG] httpcore.connection:47 - close.complete
2025-08-21 00:34:42,613 [DEBUG] httpcore.connection:47 - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-21 00:34:42,767 [DEBUG] httpcore.connection:47 - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF2341910>
2025-08-21 00:34:42,767 [DEBUG] httpcore.connection:47 - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000027DF06B8690> server_hostname='api.groq.com' timeout=5.0
2025-08-21 00:34:42,874 [DEBUG] httpcore.connection:47 - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF2445130>
2025-08-21 00:34:42,875 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:34:42,875 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:34:42,875 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:34:42,876 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:34:42,876 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:34:43,491 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 20 Aug 2025 19:04:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'70'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'59.292s'), (b'x-request-id', b'req_01k34dx1yefaa9bz80bnwj5dtp'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'972428791e4e26cb-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:34:43,491 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-21 00:34:43,491 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:34:43,492 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:34:43,492 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:34:43,492 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:34:43,493 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 20 Aug 2025 19:04:44 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'content-encoding': 'gzip', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '70', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '59.292s', 'x-request-id': 'req_01k34dx1yefaa9bz80bnwj5dtp', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '972428791e4e26cb-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:34:43,494 [DEBUG] instructor:455 - No compatible response.usage found, token usage not updated.
2025-08-21 00:34:43,495 [DEBUG] instructor:155 - Instructor Raw Response: ChatCompletion(id='chatcmpl-cd85cb56-7a9b-421f-ac5d-cefaf68ebe68', choices=[Choice(finish_reason='tool_calls', index=0, logprobs=None, message=ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='jd49hz5cb', function=Function(arguments='{"event_type":"system_event","summary":"VMICTimeProvider"}', name='ActivityLog'), type='function')]))], created=1755716684, model='llama3-70b-8192', object='chat.completion', system_fingerprint='fp_bf16903a67', usage=CompletionUsage(completion_tokens=77, prompt_tokens=1359, total_tokens=1436, completion_time=0.159821307, prompt_time=0.106076478, queue_time=0.26702967, total_time=0.265897785), usage_breakdown=None, x_groq={'id': 'req_01k34dx1yefaa9bz80bnwj5dtp'}, service_tier='on_demand')
2025-08-21 00:34:43,496 [INFO] llm_layer:37 - LLM parsing successful for provider: 'Microsoft-Windows-Time-Service'
2025-08-21 00:34:43,496 [INFO] __main__:68 - Successfully parsed log from 'Microsoft-Windows-Time-Service' with LLM.
2025-08-21 00:34:43,497 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-DNS-Client' at 2025-08-20 21:32:20+00:00. Message: play.google.com 128 1700000000000000FE8000000000000042486EFFFEA95AA00B000000000000000000000000000000...
2025-08-21 00:34:43,497 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-DNS-Client'
2025-08-21 00:34:43,497 [INFO] regex_parsers:201 - No regex match found for provider 'Microsoft-Windows-DNS-Client'.
2025-08-21 00:34:43,497 [INFO] __main__:63 - Regex failed for provider 'Microsoft-Windows-DNS-Client'. Trying LLM...
2025-08-21 00:34:43,497 [INFO] llm_layer:28 - Attempting LLM parsing for provider: 'Microsoft-Windows-DNS-Client'
2025-08-21 00:34:43,499 [DEBUG] instructor:1276 - Instructor Request: mode.value='tool_call', response_model=<class 'config.ActivityLog'>, new_kwargs={'model': 'llama3-70b-8192', 'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-DNS-Client\n\nLog entry: play.google.com 128 1700000000000000FE8000000000000042486EFFFEA95AA00B00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 22300\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}], 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}}
2025-08-21 00:34:43,500 [DEBUG] instructor:61 - max_retries: 1, timeout: None
2025-08-21 00:34:43,500 [DEBUG] instructor:183 - Retrying, attempt: 1
2025-08-21 00:34:43,501 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a5939476-b9e2-4f31-aca0-8fae04fb9563', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-DNS-Client\n\nLog entry: play.google.com 128 1700000000000000FE8000000000000042486EFFFEA95AA00B00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 22300\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:34:43,504 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:34:43,504 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:34:43,505 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:34:43,506 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:34:43,506 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:34:43,506 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:34:43,617 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 20 Aug 2025 19:04:44 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'380'), (b'Connection', b'keep-alive'), (b'CF-RAY', b'9724287d2b6926cb-BOM'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'14'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'-1186'), (b'x-ratelimit-reset-requests', b'5.338999999s'), (b'x-ratelimit-reset-tokens', b'1m11.863s'), (b'x-request-id', b'req_01k34dx2k3ecpb3k1k2k9pfmh8'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:34:43,618 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-08-21 00:34:43,618 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:34:43,618 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:34:43,619 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:34:43,619 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:34:43,619 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Wed, 20 Aug 2025 19:04:44 GMT', 'content-type': 'application/json', 'content-length': '380', 'connection': 'keep-alive', 'cf-ray': '9724287d2b6926cb-BOM', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'retry-after': '14', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '-1186', 'x-ratelimit-reset-requests': '5.338999999s', 'x-ratelimit-reset-tokens': '1m11.863s', 'x-request-id': 'req_01k34dx2k3ecpb3k1k2k9pfmh8', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:34:43,619 [DEBUG] groq._base_client:1026 - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\groq\_base_client.py", line 1024, in request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-08-21 00:34:43,620 [DEBUG] groq._base_client:772 - Retrying due to status code 429
2025-08-21 00:34:43,620 [DEBUG] groq._base_client:1065 - 2 retries left
2025-08-21 00:34:43,620 [INFO] groq._base_client:1068 - Retrying request to /openai/v1/chat/completions in 14.000000 seconds
2025-08-21 00:34:57,621 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a5939476-b9e2-4f31-aca0-8fae04fb9563', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-DNS-Client\n\nLog entry: play.google.com 128 1700000000000000FE8000000000000042486EFFFEA95AA00B00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 22300\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:34:57,623 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:34:57,623 [DEBUG] httpcore.connection:47 - close.started
2025-08-21 00:34:57,624 [DEBUG] httpcore.connection:47 - close.complete
2025-08-21 00:34:57,625 [DEBUG] httpcore.connection:47 - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-21 00:34:57,700 [DEBUG] httpcore.connection:47 - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF2445450>
2025-08-21 00:34:57,701 [DEBUG] httpcore.connection:47 - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000027DF06B8690> server_hostname='api.groq.com' timeout=5.0
2025-08-21 00:34:57,785 [DEBUG] httpcore.connection:47 - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF244D6D0>
2025-08-21 00:34:57,786 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:34:57,786 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:34:57,786 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:34:57,787 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:34:57,787 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:34:58,929 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 20 Aug 2025 19:04:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'59'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'59.408s'), (b'x-request-id', b'req_01k34dxgg8eczbcb38wa80dg5e'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'972428d63c8349a6-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:34:58,930 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-21 00:34:58,930 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:34:58,931 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:34:58,931 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:34:58,931 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:34:58,931 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 20 Aug 2025 19:04:59 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'content-encoding': 'gzip', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '59', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '59.408s', 'x-request-id': 'req_01k34dxgg8eczbcb38wa80dg5e', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '972428d63c8349a6-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:34:58,933 [DEBUG] instructor:455 - No compatible response.usage found, token usage not updated.
2025-08-21 00:34:58,933 [DEBUG] instructor:155 - Instructor Raw Response: ChatCompletion(id='chatcmpl-9ec4608b-7a36-4b0d-9e3f-0132190b86c2', choices=[Choice(finish_reason='tool_calls', index=0, logprobs=None, message=ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='jrz9ag7qt', function=Function(arguments='{"app_name":null,"event_subtype":null,"event_type":"file_system_event","file_path":null,"operation_code":null,"status":null,"summary":"DNS lookup for play.google.com"}', name='ActivityLog'), type='function')]))], created=1755716699, model='llama3-70b-8192', object='chat.completion', system_fingerprint='fp_bf16903a67', usage=CompletionUsage(completion_tokens=115, prompt_tokens=1454, total_tokens=1569, completion_time=0.235330758, prompt_time=0.113734041, queue_time=0.69282551, total_time=0.349064799), usage_breakdown=None, x_groq={'id': 'req_01k34dxgg8eczbcb38wa80dg5e'}, service_tier='on_demand')
2025-08-21 00:34:58,935 [INFO] llm_layer:37 - LLM parsing successful for provider: 'Microsoft-Windows-DNS-Client'
2025-08-21 00:34:58,935 [INFO] __main__:68 - Successfully parsed log from 'Microsoft-Windows-DNS-Client' with LLM.
2025-08-21 00:34:58,935 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Kernel-General' at 2025-08-20 21:16:47+00:00. Message: 160 \??\C:\ProgramData\Packages\Microsoft.GamingApp_8wekyb3d8bbwe\S-1-5-21-944114311-2731677228-9811...
2025-08-21 00:34:58,936 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Kernel-General'
2025-08-21 00:34:58,936 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?P<code>\d+)\s+(?P<file_path>\\[^\\].*)\s+(?P<param1>\d+)\s+(?P<param2>\d+)
2025-08-21 00:34:58,936 [INFO] regex_parsers:199 - Successfully parsed log from 'Microsoft-Windows-Kernel-General' with regex.
2025-08-21 00:34:58,936 [DEBUG] regex_parsers:82 - Regex handler 'handle_kernel_general' matched groups: {'code': '160', 'file_path': '\\??\\C:\\ProgramData\\Packages\\Microsoft.GamingApp_8wekyb3d8bbwe\\S-1-5-21-944114311-2731677228-981102054-1001\\SystemAppData\\Helium\\Cache\\fc16c5ad9a366bd0_COM15.dat', 'param1': '1', 'param2': '1'}
2025-08-21 00:34:58,936 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Power-Troubleshooter' at 2025-08-20 20:59:20+00:00. Message: 2025-08-20T15:14:09.1706103Z 2025-08-20T15:29:18.8963485Z 2271 398 364 5204 4615 2707 668516 1996505...
2025-08-21 00:34:58,937 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Power-Troubleshooter'
2025-08-21 00:34:58,937 [INFO] regex_parsers:201 - No regex match found for provider 'Microsoft-Windows-Power-Troubleshooter'.
2025-08-21 00:34:58,937 [INFO] __main__:63 - Regex failed for provider 'Microsoft-Windows-Power-Troubleshooter'. Trying LLM...
2025-08-21 00:34:58,937 [INFO] llm_layer:28 - Attempting LLM parsing for provider: 'Microsoft-Windows-Power-Troubleshooter'
2025-08-21 00:34:58,940 [DEBUG] instructor:1276 - Instructor Request: mode.value='tool_call', response_model=<class 'config.ActivityLog'>, new_kwargs={'model': 'llama3-70b-8192', 'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Power-Troubleshooter\n\nLog entry: 2025-08-20T15:14:09.1706103Z 2025-08-20T15:29:18.8963485Z 2271 398 364 5204 4615 2707 668516 1996505089 5 5 0 0  0 0 0   136\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}], 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}}
2025-08-21 00:34:58,941 [DEBUG] instructor:61 - max_retries: 1, timeout: None
2025-08-21 00:34:58,942 [DEBUG] instructor:183 - Retrying, attempt: 1
2025-08-21 00:34:58,942 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-38421c57-70e5-4790-82c5-32e756324b25', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Power-Troubleshooter\n\nLog entry: 2025-08-20T15:14:09.1706103Z 2025-08-20T15:29:18.8963485Z 2271 398 364 5204 4615 2707 668516 1996505089 5 5 0 0  0 0 0   136\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:34:58,944 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:34:58,944 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:34:58,945 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:34:58,945 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:34:58,946 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:34:58,946 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:34:59,055 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 20 Aug 2025 19:04:59 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'374'), (b'Connection', b'keep-alive'), (b'CF-RAY', b'972428ddac1749a6-BOM'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'14'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'-1212'), (b'x-ratelimit-reset-requests', b'4.814999999s'), (b'x-ratelimit-reset-tokens', b'1m12.128999999s'), (b'x-request-id', b'req_01k34dxhnafas9bkr2j15wrbxw'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:34:59,056 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-08-21 00:34:59,056 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:34:59,057 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:34:59,057 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:34:59,057 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:34:59,058 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Wed, 20 Aug 2025 19:04:59 GMT', 'content-type': 'application/json', 'content-length': '374', 'connection': 'keep-alive', 'cf-ray': '972428ddac1749a6-BOM', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'retry-after': '14', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '-1212', 'x-ratelimit-reset-requests': '4.814999999s', 'x-ratelimit-reset-tokens': '1m12.128999999s', 'x-request-id': 'req_01k34dxhnafas9bkr2j15wrbxw', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:34:59,058 [DEBUG] groq._base_client:1026 - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\groq\_base_client.py", line 1024, in request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-08-21 00:34:59,059 [DEBUG] groq._base_client:772 - Retrying due to status code 429
2025-08-21 00:34:59,059 [DEBUG] groq._base_client:1065 - 2 retries left
2025-08-21 00:34:59,060 [INFO] groq._base_client:1068 - Retrying request to /openai/v1/chat/completions in 14.000000 seconds
2025-08-21 00:35:13,060 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-38421c57-70e5-4790-82c5-32e756324b25', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Power-Troubleshooter\n\nLog entry: 2025-08-20T15:14:09.1706103Z 2025-08-20T15:29:18.8963485Z 2271 398 364 5204 4615 2707 668516 1996505089 5 5 0 0  0 0 0   136\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:35:13,061 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:35:13,062 [DEBUG] httpcore.connection:47 - close.started
2025-08-21 00:35:13,062 [DEBUG] httpcore.connection:47 - close.complete
2025-08-21 00:35:13,063 [DEBUG] httpcore.connection:47 - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-21 00:35:13,135 [DEBUG] httpcore.connection:47 - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF247DE50>
2025-08-21 00:35:13,136 [DEBUG] httpcore.connection:47 - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000027DF06B8690> server_hostname='api.groq.com' timeout=5.0
2025-08-21 00:35:13,230 [DEBUG] httpcore.connection:47 - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF247D7D0>
2025-08-21 00:35:13,230 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:35:13,231 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:35:13,231 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:35:13,231 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:35:13,232 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:35:14,287 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 20 Aug 2025 19:05:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'74'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'59.258s'), (b'x-request-id', b'req_01k34dxzkxf0v9jwxd42wc5tk4'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97242936db04c6aa-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:35:14,289 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-21 00:35:14,289 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:35:14,290 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:35:14,290 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:35:14,291 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:35:14,291 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 20 Aug 2025 19:05:15 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'content-encoding': 'gzip', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '74', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '59.258s', 'x-request-id': 'req_01k34dxzkxf0v9jwxd42wc5tk4', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '97242936db04c6aa-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:35:14,292 [DEBUG] instructor:455 - No compatible response.usage found, token usage not updated.
2025-08-21 00:35:14,293 [DEBUG] instructor:155 - Instructor Raw Response: ChatCompletion(id='chatcmpl-1f59413d-fe5e-45c5-aade-f9859844f3ea', choices=[Choice(finish_reason='tool_calls', index=0, logprobs=None, message=ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='wx90792ee', function=Function(arguments='{"event_type":"power_event","summary":"Parsed log entry from Microsoft-Windows-Power-Troubleshooter provider"}', name='ActivityLog'), type='function')]))], created=1755716715, model='llama3-70b-8192', object='chat.completion', system_fingerprint='fp_bf16903a67', usage=CompletionUsage(completion_tokens=89, prompt_tokens=1436, total_tokens=1525, completion_time=0.163877288, prompt_time=0.112504975, queue_time=0.655734744, total_time=0.276382263), usage_breakdown=None, x_groq={'id': 'req_01k34dxzkxf0v9jwxd42wc5tk4'}, service_tier='on_demand')
2025-08-21 00:35:14,295 [INFO] llm_layer:37 - LLM parsing successful for provider: 'Microsoft-Windows-Power-Troubleshooter'
2025-08-21 00:35:14,295 [INFO] __main__:68 - Successfully parsed log from 'Microsoft-Windows-Power-Troubleshooter' with LLM.
2025-08-21 00:35:14,296 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Kernel-General' at 2025-08-20 20:59:19+00:00. Message: 46 \Device\HarddiskVolume1\EFI\Microsoft\Boot\BCD 70 5...
2025-08-21 00:35:14,296 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Kernel-General'
2025-08-21 00:35:14,297 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?P<code>\d+)\s+(?P<file_path>\\[^\\].*)\s+(?P<param1>\d+)\s+(?P<param2>\d+)
2025-08-21 00:35:14,297 [INFO] regex_parsers:199 - Successfully parsed log from 'Microsoft-Windows-Kernel-General' with regex.
2025-08-21 00:35:14,297 [DEBUG] regex_parsers:82 - Regex handler 'handle_kernel_general' matched groups: {'code': '46', 'file_path': '\\Device\\HarddiskVolume1\\EFI\\Microsoft\\Boot\\BCD', 'param1': '70', 'param2': '5'}
2025-08-21 00:35:14,299 [DEBUG] log_fetcher:32 - Read a chunk of 14 events.
2025-08-21 00:35:14,299 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Kernel-Power' at 2025-08-20 20:59:18+00:00. Message: 21 15 152 1 54468 3900 34337 3900 34337 154 0 true 15...
2025-08-21 00:35:14,302 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Kernel-Power'
2025-08-21 00:35:14,303 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?:The system is entering sleep\.|The system is exiting sleep\.|(?:Sleep|Hibernate) Time: (?P<sleep_time>.*))(?P<sleep_details>.*)?|(?:Shutdown reason: (?P<shutdown_reason>.*))(?P<shutdown_details>.*)?|(?P<message>.*)
2025-08-21 00:35:14,303 [INFO] regex_parsers:199 - Successfully parsed log from 'Microsoft-Windows-Kernel-Power' with regex.
2025-08-21 00:35:14,303 [DEBUG] regex_parsers:45 - Regex handler 'handle_kernel_power' matched groups: {'sleep_time': None, 'sleep_details': None, 'shutdown_reason': None, 'shutdown_details': None, 'message': '21 15 152 1 54468 3900 34337 3900 34337 154 0 true 15'}
2025-08-21 00:35:14,304 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Kernel-Power' at 2025-08-20 20:59:18+00:00. Message: 0 23653 0 0 0 23653 0 83 false 15 0 0 true 0 0 true true 0 7 0 true false 154 false 3900 34337 152 2...
2025-08-21 00:35:14,304 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Kernel-Power'
2025-08-21 00:35:14,304 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?:The system is entering sleep\.|The system is exiting sleep\.|(?:Sleep|Hibernate) Time: (?P<sleep_time>.*))(?P<sleep_details>.*)?|(?:Shutdown reason: (?P<shutdown_reason>.*))(?P<shutdown_details>.*)?|(?P<message>.*)
2025-08-21 00:35:14,304 [INFO] regex_parsers:199 - Successfully parsed log from 'Microsoft-Windows-Kernel-Power' with regex.
2025-08-21 00:35:14,304 [DEBUG] regex_parsers:45 - Regex handler 'handle_kernel_power' matched groups: {'sleep_time': None, 'sleep_details': None, 'shutdown_reason': None, 'shutdown_details': None, 'message': '0 23653 0 0 0 23653 0 83 false 15 0 0 true 0 0 true true 0 7 0 true false 154 false 3900 34337 152 21 0 23653 0 0 0 0 17220 false 3900 3900 54468 0 0 0 34337 34337 0 0 4 0'}
2025-08-21 00:35:14,305 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Kernel-Power' at 2025-08-20 20:59:18+00:00. Message: 20 true false 152 3900 34337 152 21...
2025-08-21 00:35:14,305 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Kernel-Power'
2025-08-21 00:35:14,305 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?:The system is entering sleep\.|The system is exiting sleep\.|(?:Sleep|Hibernate) Time: (?P<sleep_time>.*))(?P<sleep_details>.*)?|(?:Shutdown reason: (?P<shutdown_reason>.*))(?P<shutdown_details>.*)?|(?P<message>.*)
2025-08-21 00:35:14,306 [INFO] regex_parsers:199 - Successfully parsed log from 'Microsoft-Windows-Kernel-Power' with regex.
2025-08-21 00:35:14,306 [DEBUG] regex_parsers:45 - Regex handler 'handle_kernel_power' matched groups: {'sleep_time': None, 'sleep_details': None, 'shutdown_reason': None, 'shutdown_details': None, 'message': '20 true false 152 3900 34337 152 21'}
2025-08-21 00:35:14,306 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Kernel-Power' at 2025-08-20 20:59:18+00:00. Message: 21 20 151 3 909515218 3254 34337 3900 34337 152 1 true 20...
2025-08-21 00:35:14,307 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Kernel-Power'
2025-08-21 00:35:14,307 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?:The system is entering sleep\.|The system is exiting sleep\.|(?:Sleep|Hibernate) Time: (?P<sleep_time>.*))(?P<sleep_details>.*)?|(?:Shutdown reason: (?P<shutdown_reason>.*))(?P<shutdown_details>.*)?|(?P<message>.*)
2025-08-21 00:35:14,307 [INFO] regex_parsers:199 - Successfully parsed log from 'Microsoft-Windows-Kernel-Power' with regex.
2025-08-21 00:35:14,307 [DEBUG] regex_parsers:45 - Regex handler 'handle_kernel_power' matched groups: {'sleep_time': None, 'sleep_details': None, 'shutdown_reason': None, 'shutdown_details': None, 'message': '21 20 151 3 909515218 3254 34337 3900 34337 152 1 true 20'}
2025-08-21 00:35:14,307 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Kernel-Power' at 2025-08-20 20:59:18+00:00. Message: true 3254 34337...
2025-08-21 00:35:14,308 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Kernel-Power'
2025-08-21 00:35:14,308 [DEBUG] regex_parsers:196 - Found matching provider in registry. Trying regex: (?:The system is entering sleep\.|The system is exiting sleep\.|(?:Sleep|Hibernate) Time: (?P<sleep_time>.*))(?P<sleep_details>.*)?|(?:Shutdown reason: (?P<shutdown_reason>.*))(?P<shutdown_details>.*)?|(?P<message>.*)
2025-08-21 00:35:14,309 [INFO] regex_parsers:199 - Successfully parsed log from 'Microsoft-Windows-Kernel-Power' with regex.
2025-08-21 00:35:14,309 [DEBUG] regex_parsers:45 - Regex handler 'handle_kernel_power' matched groups: {'sleep_time': None, 'sleep_details': None, 'shutdown_reason': None, 'shutdown_details': None, 'message': 'true 3254 34337'}
2025-08-21 00:35:14,309 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Kernel-Boot' at 2025-08-20 20:59:18+00:00. Message: 0...
2025-08-21 00:35:14,309 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Kernel-Boot'
2025-08-21 00:35:14,309 [INFO] regex_parsers:201 - No regex match found for provider 'Microsoft-Windows-Kernel-Boot'.
2025-08-21 00:35:14,310 [INFO] __main__:63 - Regex failed for provider 'Microsoft-Windows-Kernel-Boot'. Trying LLM...
2025-08-21 00:35:14,310 [INFO] llm_layer:28 - Attempting LLM parsing for provider: 'Microsoft-Windows-Kernel-Boot'
2025-08-21 00:35:14,312 [DEBUG] instructor:1276 - Instructor Request: mode.value='tool_call', response_model=<class 'config.ActivityLog'>, new_kwargs={'model': 'llama3-70b-8192', 'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Kernel-Boot\n\nLog entry: 0\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}], 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}}
2025-08-21 00:35:14,313 [DEBUG] instructor:61 - max_retries: 1, timeout: None
2025-08-21 00:35:14,313 [DEBUG] instructor:183 - Retrying, attempt: 1
2025-08-21 00:35:14,314 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-490055b3-a058-4b83-8b22-e7e88aff59fe', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Kernel-Boot\n\nLog entry: 0\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:35:14,315 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:35:14,316 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:35:14,316 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:35:14,316 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:35:14,317 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:35:14,317 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:35:14,438 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 20 Aug 2025 19:05:15 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'374'), (b'Connection', b'keep-alive'), (b'CF-RAY', b'9724293dbb38c6aa-BOM'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'14'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'-1201'), (b'x-ratelimit-reset-requests', b'4.916999999s'), (b'x-ratelimit-reset-tokens', b'1m12.011s'), (b'x-request-id', b'req_01k34dy0nsf0v9q8nh07h2p1ts'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:35:14,439 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-08-21 00:35:14,439 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:35:14,439 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:35:14,440 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:35:14,440 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:35:14,440 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Wed, 20 Aug 2025 19:05:15 GMT', 'content-type': 'application/json', 'content-length': '374', 'connection': 'keep-alive', 'cf-ray': '9724293dbb38c6aa-BOM', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'retry-after': '14', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '-1201', 'x-ratelimit-reset-requests': '4.916999999s', 'x-ratelimit-reset-tokens': '1m12.011s', 'x-request-id': 'req_01k34dy0nsf0v9q8nh07h2p1ts', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:35:14,441 [DEBUG] groq._base_client:1026 - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\groq\_base_client.py", line 1024, in request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-08-21 00:35:14,442 [DEBUG] groq._base_client:772 - Retrying due to status code 429
2025-08-21 00:35:14,442 [DEBUG] groq._base_client:1065 - 2 retries left
2025-08-21 00:35:14,443 [INFO] groq._base_client:1068 - Retrying request to /openai/v1/chat/completions in 14.000000 seconds
2025-08-21 00:35:28,443 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-490055b3-a058-4b83-8b22-e7e88aff59fe', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Kernel-Boot\n\nLog entry: 0\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:35:28,445 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:35:28,445 [DEBUG] httpcore.connection:47 - close.started
2025-08-21 00:35:28,446 [DEBUG] httpcore.connection:47 - close.complete
2025-08-21 00:35:28,446 [DEBUG] httpcore.connection:47 - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-21 00:35:28,654 [DEBUG] httpcore.connection:47 - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF2475DA0>
2025-08-21 00:35:28,655 [DEBUG] httpcore.connection:47 - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000027DF06B8690> server_hostname='api.groq.com' timeout=5.0
2025-08-21 00:35:28,755 [DEBUG] httpcore.connection:47 - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF2475EF0>
2025-08-21 00:35:28,756 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:35:28,756 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:35:28,757 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:35:28,757 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:35:28,757 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:35:29,967 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 20 Aug 2025 19:05:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'132'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'58.674s'), (b'x-request-id', b'req_01k34dyermf19vwn9dvf3gewtw'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97242997ec183200-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:35:29,968 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-21 00:35:29,968 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:35:29,968 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:35:29,969 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:35:29,969 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:35:29,969 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "200 OK" Headers({'date': 'Wed, 20 Aug 2025 19:05:30 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'content-encoding': 'gzip', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '132', 'x-ratelimit-reset-requests': '6s', 'x-ratelimit-reset-tokens': '58.674s', 'x-request-id': 'req_01k34dyermf19vwn9dvf3gewtw', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '97242997ec183200-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:35:29,971 [DEBUG] instructor:455 - No compatible response.usage found, token usage not updated.
2025-08-21 00:35:29,972 [DEBUG] instructor:155 - Instructor Raw Response: ChatCompletion(id='chatcmpl-e8104b69-55e4-4f52-be1b-dd2bab366a11', choices=[Choice(finish_reason='tool_calls', index=0, logprobs=None, message=ChatCompletionMessage(content=None, role='assistant', executed_tools=None, function_call=None, reasoning=None, tool_calls=[ChatCompletionMessageToolCall(id='qg51h99e4', function=Function(arguments='{"event_type":"system_event","summary":"Kernel boot event"}', name='ActivityLog'), type='function')]))], created=1755716730, model='llama3-70b-8192', object='chat.completion', system_fingerprint='fp_bf16903a67', usage=CompletionUsage(completion_tokens=77, prompt_tokens=1357, total_tokens=1434, completion_time=0.148736827, prompt_time=0.105635663, queue_time=0.830496969, total_time=0.25437249), usage_breakdown=None, x_groq={'id': 'req_01k34dyermf19vwn9dvf3gewtw'}, service_tier='on_demand')
2025-08-21 00:35:29,973 [INFO] llm_layer:37 - LLM parsing successful for provider: 'Microsoft-Windows-Kernel-Boot'
2025-08-21 00:35:29,973 [INFO] __main__:68 - Successfully parsed log from 'Microsoft-Windows-Kernel-Boot' with LLM.
2025-08-21 00:35:29,974 [DEBUG] log_fetcher:48 - Yielding event from 'Microsoft-Windows-Kernel-Boot' at 2025-08-20 20:59:18+00:00. Message: 1...
2025-08-21 00:35:29,974 [INFO] regex_parsers:193 - Attempting regex parsing for provider: 'Microsoft-Windows-Kernel-Boot'
2025-08-21 00:35:29,974 [INFO] regex_parsers:201 - No regex match found for provider 'Microsoft-Windows-Kernel-Boot'.
2025-08-21 00:35:29,975 [INFO] __main__:63 - Regex failed for provider 'Microsoft-Windows-Kernel-Boot'. Trying LLM...
2025-08-21 00:35:29,975 [INFO] llm_layer:28 - Attempting LLM parsing for provider: 'Microsoft-Windows-Kernel-Boot'
2025-08-21 00:35:29,977 [DEBUG] instructor:1276 - Instructor Request: mode.value='tool_call', response_model=<class 'config.ActivityLog'>, new_kwargs={'model': 'llama3-70b-8192', 'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Kernel-Boot\n\nLog entry: 1\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}], 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}}
2025-08-21 00:35:29,978 [DEBUG] instructor:61 - max_retries: 1, timeout: None
2025-08-21 00:35:29,978 [DEBUG] instructor:183 - Retrying, attempt: 1
2025-08-21 00:35:29,979 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-cfc9b324-ca7b-4e5f-acff-d5f9839c6903', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Kernel-Boot\n\nLog entry: 1\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:35:29,980 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:35:29,981 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:35:29,981 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:35:29,981 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:35:29,982 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:35:29,982 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:35:30,078 [DEBUG] httpcore.http11:47 - receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 20 Aug 2025 19:05:30 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'374'), (b'Connection', b'keep-alive'), (b'CF-RAY', b'9724299f8ef03200-BOM'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'12'), (b'vary', b'Origin'), (b'x-groq-region', b'bom'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'6000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'-1071'), (b'x-ratelimit-reset-requests', b'4.787s'), (b'x-ratelimit-reset-tokens', b'1m10.713s'), (b'x-request-id', b'req_01k34dyfyhfc0vax7v7bcysx7b'), (b'via', b'1.1 google'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-21 00:35:30,079 [INFO] httpx:1025 - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-08-21 00:35:30,079 [DEBUG] httpcore.http11:47 - receive_response_body.started request=<Request [b'POST']>
2025-08-21 00:35:30,080 [DEBUG] httpcore.http11:47 - receive_response_body.complete
2025-08-21 00:35:30,080 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:35:30,081 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:35:30,081 [DEBUG] groq._base_client:1014 - HTTP Response: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Wed, 20 Aug 2025 19:05:30 GMT', 'content-type': 'application/json', 'content-length': '374', 'connection': 'keep-alive', 'cf-ray': '9724299f8ef03200-BOM', 'cache-control': 'private, max-age=0, no-store, no-cache, must-revalidate', 'retry-after': '12', 'vary': 'Origin', 'x-groq-region': 'bom', 'x-ratelimit-limit-requests': '14400', 'x-ratelimit-limit-tokens': '6000', 'x-ratelimit-remaining-requests': '14399', 'x-ratelimit-remaining-tokens': '-1071', 'x-ratelimit-reset-requests': '4.787s', 'x-ratelimit-reset-tokens': '1m10.713s', 'x-request-id': 'req_01k34dyfyhfc0vax7v7bcysx7b', 'via': '1.1 google', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-21 00:35:30,082 [DEBUG] groq._base_client:1026 - Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\groq\_base_client.py", line 1024, in request
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Hp\AppData\Roaming\Python\Python313\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-08-21 00:35:30,082 [DEBUG] groq._base_client:772 - Retrying due to status code 429
2025-08-21 00:35:30,083 [DEBUG] groq._base_client:1065 - 2 retries left
2025-08-21 00:35:30,084 [INFO] groq._base_client:1068 - Retrying request to /openai/v1/chat/completions in 12.000000 seconds
2025-08-21 00:35:42,084 [DEBUG] groq._base_client:480 - Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-cfc9b324-ca7b-4e5f-acff-d5f9839c6903', 'json_data': {'messages': [{'role': 'system', 'content': 'You are a world-class log parsing expert. Your task is to extract structured data from a raw log entry into the provided schema. Do not invent any information that is not present in the log. Categorize the event type accurately based on the provider and content.'}, {'role': 'user', 'content': 'Provider: Microsoft-Windows-Kernel-Boot\n\nLog entry: 1\n\nParse this log entry into structured data according to the ActivityLog schema.'}], 'model': 'llama3-70b-8192', 'tool_choice': {'type': 'function', 'function': {'name': 'ActivityLog'}}, 'tools': [{'type': 'function', 'function': {'name': 'ActivityLog', 'description': 'Schema for a single structured log event.', 'parameters': {'properties': {'event_type': {'description': 'The high-level category of the event.', 'enum': ['file_interaction', 'app_lifecycle', 'system_event', 'application_crash', 'service_event', 'power_event', 'dcom_event', 'file_system_event', 'unknown'], 'title': 'Event Type', 'type': 'string'}, 'event_subtype': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'A more specific categorization within the event type.', 'title': 'Event Subtype'}, 'app_name': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The name of the application involved.', 'title': 'App Name'}, 'file_path': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'The full path to the file involved.', 'title': 'File Path'}, 'status': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Status or result of the event.', 'title': 'Status'}, 'operation_code': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'description': 'Operation code for events that use them.', 'title': 'Operation Code'}, 'summary': {'description': 'A brief, factual summary of the log entry.', 'title': 'Summary', 'type': 'string'}}, 'required': ['event_type', 'summary'], 'type': 'object'}}}]}}
2025-08-21 00:35:42,088 [DEBUG] groq._base_client:976 - Sending HTTP Request: POST https://api.groq.com/openai/v1/chat/completions
2025-08-21 00:35:42,090 [DEBUG] httpcore.connection:47 - close.started
2025-08-21 00:35:42,091 [DEBUG] httpcore.connection:47 - close.complete
2025-08-21 00:35:42,091 [DEBUG] httpcore.connection:47 - connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-08-21 00:35:42,240 [DEBUG] httpcore.connection:47 - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF23A7110>
2025-08-21 00:35:42,241 [DEBUG] httpcore.connection:47 - start_tls.started ssl_context=<ssl.SSLContext object at 0x0000027DF06B8690> server_hostname='api.groq.com' timeout=5.0
2025-08-21 00:35:42,343 [DEBUG] httpcore.connection:47 - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027DF23A5DF0>
2025-08-21 00:35:42,344 [DEBUG] httpcore.http11:47 - send_request_headers.started request=<Request [b'POST']>
2025-08-21 00:35:42,345 [DEBUG] httpcore.http11:47 - send_request_headers.complete
2025-08-21 00:35:42,345 [DEBUG] httpcore.http11:47 - send_request_body.started request=<Request [b'POST']>
2025-08-21 00:35:42,346 [DEBUG] httpcore.http11:47 - send_request_body.complete
2025-08-21 00:35:42,346 [DEBUG] httpcore.http11:47 - receive_response_headers.started request=<Request [b'POST']>
2025-08-21 00:35:43,250 [DEBUG] httpcore.http11:47 - receive_response_headers.failed exception=KeyboardInterrupt()
2025-08-21 00:35:43,251 [DEBUG] httpcore.http11:47 - response_closed.started
2025-08-21 00:35:43,252 [DEBUG] httpcore.http11:47 - response_closed.complete
2025-08-21 00:35:43,253 [INFO] log_fetcher:65 - Finished fetching logs from 'System'. Total events yielded: 41.
2025-08-21 00:35:43,256 [INFO] log_fetcher:68 - Event log handle closed.
